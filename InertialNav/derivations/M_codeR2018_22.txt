SF = zeros(14,1);
SF(1) = dvz - dvz_b;
SF(2) = 2*SF(1)*q3 + 2*dvx*q1 + 2*dvy*q2;
SF(3) = 2*dvx*q3 - 2*SF(1)*q1 + 2*dvy*q0;
SF(4) = 2*SF(1)*q2 + 2*dvx*q0 - 2*dvy*q3;
SF(5) = day/2 - day_b/2;
SF(6) = daz/2 - daz_b/2;
SF(7) = dax/2 - dax_b/2;
SF(8) = q1/2;
SF(9) = q2/2;
SF(10) = q3/2;
SF(11) = 2*dvy*q1;
SF(12) = 2*SF(1)*q0;
SF(13) = 2*dvx*q2;
SF(14) = SF(11) + SF(12) - SF(13);
SG = zeros(10,1);
SG(1) = q0/2;
SG(2) = q3^2;
SG(3) = q2^2;
SG(4) = q1^2;
SG(5) = q0^2;
SG(6) = 2*q2*q3;
SG(7) = 2*q1*q3;
SG(8) = 2*q1*q2;
SG(9) = q2/2;
SG(10) = 2*q0*q2;
SQ = zeros(24,1);
SQ(1) = dvxCov*(SG(7) - SG(10))*(SG(8) + 2*q0*q3) - dvyCov*(SG(6) + 2*q0*q1)*(SG(2) - SG(3) + SG(4) - SG(5)) + dvzCov*(SG(6) - 2*q0*q1)*(SG(2) - SG(3) - SG(4) + SG(5));
SQ(2) = dvzCov*(SG(7) + SG(10))*(SG(2) - SG(3) - SG(4) + SG(5)) - dvxCov*(SG(7) - SG(10))*(SG(2) + SG(3) - SG(4) - SG(5)) + dvyCov*(SG(6) + 2*q0*q1)*(SG(8) - 2*q0*q3);
SQ(3) = dvzCov*(SG(7) + SG(10))*(SG(6) - 2*q0*q1) - dvyCov*(SG(8) - 2*q0*q3)*(SG(2) - SG(3) + SG(4) - SG(5)) - dvxCov*(SG(8) + 2*q0*q3)*(SG(2) + SG(3) - SG(4) - SG(5));
SQ(4) = (SG(1)*dayCov*q1)/2 - (SG(9)*daxCov*q3)/2 - (SG(1)*dazCov*q1)/2;
SQ(5) = (SG(9)*daxCov*q1)/2 - (SG(9)*dayCov*q1)/2 - (SG(1)*dazCov*q3)/2;
SQ(6) = (SG(1)*daxCov*q3)/2 - (SG(1)*dayCov*q3)/2 - (SG(9)*dazCov*q1)/2;
SQ(7) = (SG(9)*dayCov*q3)/2 - (SG(1)*daxCov*q1)/2 - (SG(9)*dazCov*q3)/2;
SQ(8) = (dazCov*q1*q3)/4 - (daxCov*q1*q3)/4 - SG(1)*SG(9)*dayCov;
SQ(9) = SG(1)*SG(9)*dazCov - SG(1)*SG(9)*daxCov - (dayCov*q1*q3)/4;
SQ(10) = q1^2;
SQ(11) = SG(1)^2;
SQ(12) = q3^2;
SQ(13) = SG(9)^2;
SQ(14) = 2*q0*q1;
SQ(15) = 2*q0*q3;
SQ(16) = SG(2) - SG(3) - SG(4) + SG(5);
SQ(17) = SG(7) - SG(10);
SQ(18) = SG(6) + SQ(14);
SQ(19) = SG(2) - SG(3) + SG(4) - SG(5);
SQ(20) = SG(6) - SQ(14);
SQ(21) = SG(8) + SQ(15);
SQ(22) = SG(2) + SG(3) - SG(4) - SG(5);
SQ(23) = SG(8) - SQ(15);
SQ(24) = SG(7) + SG(10);
SPP = zeros(59,1);
SPP(1) = q0^2 - q1^2 - q2^2 + q3^2;
SPP(2) = 2*q0*q1 - 2*q2*q3;
SPP(3) = 2*q0*q2 + 2*q1*q3;
SPP(4) = OP(4,2) + OP(1,2)*SF(6) + OP(2,2)*SF(5) - OP(3,2)*SF(7) + OP(11,2)*SF(9) - OP(12,2)*SF(8) - (OP(13,2)*q0)/2;
SPP(5) = OP(4,1) + OP(1,1)*SF(6) + OP(2,1)*SF(5) - OP(3,1)*SF(7) + OP(11,1)*SF(9) - OP(12,1)*SF(8) - (OP(13,1)*q0)/2;
SPP(6) = OP(4,4) + OP(1,4)*SF(6) + OP(2,4)*SF(5) - OP(3,4)*SF(7) + OP(11,4)*SF(9) - OP(12,4)*SF(8) - (OP(13,4)*q0)/2;
SPP(7) = OP(4,3) + OP(1,3)*SF(6) + OP(2,3)*SF(5) - OP(3,3)*SF(7) + OP(11,3)*SF(9) - OP(12,3)*SF(8) - (OP(13,3)*q0)/2;
SPP(8) = OP(3,2) + OP(1,2)*SF(5) - OP(2,2)*SF(6) + OP(4,2)*SF(7) - OP(11,2)*SF(10) + OP(13,2)*SF(8) - (OP(12,2)*q0)/2;
SPP(9) = OP(3,1) + OP(1,1)*SF(5) - OP(2,1)*SF(6) + OP(4,1)*SF(7) - OP(11,1)*SF(10) + OP(13,1)*SF(8) - (OP(12,1)*q0)/2;
SPP(10) = OP(3,4) + OP(1,4)*SF(5) - OP(2,4)*SF(6) + OP(4,4)*SF(7) - OP(11,4)*SF(10) + OP(13,4)*SF(8) - (OP(12,4)*q0)/2;
SPP(11) = OP(3,3) + OP(1,3)*SF(5) - OP(2,3)*SF(6) + OP(4,3)*SF(7) - OP(11,3)*SF(10) + OP(13,3)*SF(8) - (OP(12,3)*q0)/2;
SPP(12) = OP(2,2) + OP(1,2)*SF(7) + OP(3,2)*SF(6) - OP(4,2)*SF(5) + OP(12,2)*SF(10) - OP(13,2)*SF(9) - (OP(11,2)*q0)/2;
SPP(13) = OP(2,1) + OP(1,1)*SF(7) + OP(3,1)*SF(6) - OP(4,1)*SF(5) + OP(12,1)*SF(10) - OP(13,1)*SF(9) - (OP(11,1)*q0)/2;
SPP(14) = OP(2,4) + OP(1,4)*SF(7) + OP(3,4)*SF(6) - OP(4,4)*SF(5) + OP(12,4)*SF(10) - OP(13,4)*SF(9) - (OP(11,4)*q0)/2;
SPP(15) = OP(2,3) + OP(1,3)*SF(7) + OP(3,3)*SF(6) - OP(4,3)*SF(5) + OP(12,3)*SF(10) - OP(13,3)*SF(9) - (OP(11,3)*q0)/2;
SPP(16) = OP(1,2) - OP(2,2)*SF(7) - OP(3,2)*SF(5) - OP(4,2)*SF(6) + OP(11,2)*SF(8) + OP(12,2)*SF(9) + OP(13,2)*SF(10);
SPP(17) = OP(1,1) - OP(2,1)*SF(7) - OP(3,1)*SF(5) - OP(4,1)*SF(6) + OP(11,1)*SF(8) + OP(12,1)*SF(9) + OP(13,1)*SF(10);
SPP(18) = OP(1,4) - OP(2,4)*SF(7) - OP(3,4)*SF(5) - OP(4,4)*SF(6) + OP(11,4)*SF(8) + OP(12,4)*SF(9) + OP(13,4)*SF(10);
SPP(19) = OP(1,3) - OP(2,3)*SF(7) - OP(3,3)*SF(5) - OP(4,3)*SF(6) + OP(11,3)*SF(8) + OP(12,3)*SF(9) + OP(13,3)*SF(10);
SPP(20) = OP(4,11) + OP(1,11)*SF(6) + OP(2,11)*SF(5) - OP(3,11)*SF(7) + OP(11,11)*SF(9) - OP(12,11)*SF(8) - (OP(13,11)*q0)/2;
SPP(21) = OP(4,13) + OP(1,13)*SF(6) + OP(2,13)*SF(5) - OP(3,13)*SF(7) + OP(11,13)*SF(9) - OP(12,13)*SF(8) - (OP(13,13)*q0)/2;
SPP(22) = OP(4,12) + OP(1,12)*SF(6) + OP(2,12)*SF(5) - OP(3,12)*SF(7) + OP(11,12)*SF(9) - OP(12,12)*SF(8) - (OP(13,12)*q0)/2;
SPP(23) = OP(3,11) + OP(1,11)*SF(5) - OP(2,11)*SF(6) + OP(4,11)*SF(7) - OP(11,11)*SF(10) + OP(13,11)*SF(8) - (OP(12,11)*q0)/2;
SPP(24) = OP(3,13) + OP(1,13)*SF(5) - OP(2,13)*SF(6) + OP(4,13)*SF(7) - OP(11,13)*SF(10) + OP(13,13)*SF(8) - (OP(12,13)*q0)/2;
SPP(25) = OP(3,12) + OP(1,12)*SF(5) - OP(2,12)*SF(6) + OP(4,12)*SF(7) - OP(11,12)*SF(10) + OP(13,12)*SF(8) - (OP(12,12)*q0)/2;
SPP(26) = OP(2,11) + OP(1,11)*SF(7) + OP(3,11)*SF(6) - OP(4,11)*SF(5) + OP(12,11)*SF(10) - OP(13,11)*SF(9) - (OP(11,11)*q0)/2;
SPP(27) = OP(2,13) + OP(1,13)*SF(7) + OP(3,13)*SF(6) - OP(4,13)*SF(5) + OP(12,13)*SF(10) - OP(13,13)*SF(9) - (OP(11,13)*q0)/2;
SPP(28) = OP(2,12) + OP(1,12)*SF(7) + OP(3,12)*SF(6) - OP(4,12)*SF(5) + OP(12,12)*SF(10) - OP(13,12)*SF(9) - (OP(11,12)*q0)/2;
SPP(29) = OP(7,2) + OP(2,2)*SF(3) + OP(1,2)*SF(14) - OP(3,2)*SF(4) + OP(4,2)*SF(2) - OP(14,2)*SPP(1);
SPP(30) = OP(7,1) + OP(2,1)*SF(3) + OP(1,1)*SF(14) - OP(3,1)*SF(4) + OP(4,1)*SF(2) - OP(14,1)*SPP(1);
SPP(31) = OP(7,4) + OP(2,4)*SF(3) + OP(1,4)*SF(14) - OP(3,4)*SF(4) + OP(4,4)*SF(2) - OP(14,4)*SPP(1);
SPP(32) = OP(7,3) + OP(2,3)*SF(3) + OP(1,3)*SF(14) - OP(3,3)*SF(4) + OP(4,3)*SF(2) - OP(14,3)*SPP(1);
SPP(33) = OP(5,2) + OP(1,2)*SF(4) + OP(2,2)*SF(2) - OP(4,2)*SF(3) + OP(3,2)*SF(14) - OP(14,2)*SPP(3);
SPP(34) = OP(5,1) + OP(1,1)*SF(4) + OP(2,1)*SF(2) - OP(4,1)*SF(3) + OP(3,1)*SF(14) - OP(14,1)*SPP(3);
SPP(35) = OP(5,4) + OP(1,4)*SF(4) + OP(2,4)*SF(2) - OP(4,4)*SF(3) + OP(3,4)*SF(14) - OP(14,4)*SPP(3);
SPP(36) = OP(5,3) + OP(1,3)*SF(4) + OP(2,3)*SF(2) - OP(4,3)*SF(3) + OP(3,3)*SF(14) - OP(14,3)*SPP(3);
SPP(37) = OP(1,11) - OP(2,11)*SF(7) - OP(3,11)*SF(5) - OP(4,11)*SF(6) + OP(11,11)*SF(8) + OP(12,11)*SF(9) + OP(13,11)*SF(10);
SPP(38) = OP(1,13) - OP(2,13)*SF(7) - OP(3,13)*SF(5) - OP(4,13)*SF(6) + OP(11,13)*SF(8) + OP(12,13)*SF(9) + OP(13,13)*SF(10);
SPP(39) = OP(1,12) - OP(2,12)*SF(7) - OP(3,12)*SF(5) - OP(4,12)*SF(6) + OP(11,12)*SF(8) + OP(12,12)*SF(9) + OP(13,12)*SF(10);
SPP(40) = OP(6,2) + OP(1,2)*SF(3) + OP(3,2)*SF(2) - OP(2,2)*SF(14) + OP(4,2)*SF(4) + OP(14,2)*SPP(2);
SPP(41) = OP(6,1) + OP(1,1)*SF(3) + OP(3,1)*SF(2) - OP(2,1)*SF(14) + OP(4,1)*SF(4) + OP(14,1)*SPP(2);
SPP(42) = OP(6,4) + OP(1,4)*SF(3) + OP(3,4)*SF(2) - OP(2,4)*SF(14) + OP(4,4)*SF(4) + OP(14,4)*SPP(2);
SPP(43) = OP(6,3) + OP(1,3)*SF(3) + OP(3,3)*SF(2) - OP(2,3)*SF(14) + OP(4,3)*SF(4) + OP(14,3)*SPP(2);
SPP(44) = OP(4,14) + OP(1,14)*SF(6) + OP(2,14)*SF(5) - OP(3,14)*SF(7) + OP(11,14)*SF(9) - OP(12,14)*SF(8) - (OP(13,14)*q0)/2;
SPP(45) = OP(3,14) + OP(1,14)*SF(5) - OP(2,14)*SF(6) + OP(4,14)*SF(7) - OP(11,14)*SF(10) + OP(13,14)*SF(8) - (OP(12,14)*q0)/2;
SPP(46) = OP(2,14) + OP(1,14)*SF(7) + OP(3,14)*SF(6) - OP(4,14)*SF(5) + OP(12,14)*SF(10) - OP(13,14)*SF(9) - (OP(11,14)*q0)/2;
SPP(47) = OP(7,11) + OP(1,11)*SF(14) + OP(2,11)*SF(3) - OP(3,11)*SF(4) + OP(4,11)*SF(2) - OP(14,11)*SPP(1);
SPP(48) = OP(7,13) + OP(1,13)*SF(14) + OP(2,13)*SF(3) - OP(3,13)*SF(4) + OP(4,13)*SF(2) - OP(14,13)*SPP(1);
SPP(49) = OP(7,12) + OP(1,12)*SF(14) + OP(2,12)*SF(3) - OP(3,12)*SF(4) + OP(4,12)*SF(2) - OP(14,12)*SPP(1);
SPP(50) = OP(5,11) + OP(1,11)*SF(4) + OP(2,11)*SF(2) + OP(3,11)*SF(14) - OP(4,11)*SF(3) - OP(14,11)*SPP(3);
SPP(51) = OP(5,13) + OP(1,13)*SF(4) + OP(2,13)*SF(2) + OP(3,13)*SF(14) - OP(4,13)*SF(3) - OP(14,13)*SPP(3);
SPP(52) = OP(5,12) + OP(1,12)*SF(4) + OP(2,12)*SF(2) + OP(3,12)*SF(14) - OP(4,12)*SF(3) - OP(14,12)*SPP(3);
SPP(53) = OP(1,14) - OP(2,14)*SF(7) - OP(3,14)*SF(5) - OP(4,14)*SF(6) + OP(11,14)*SF(8) + OP(12,14)*SF(9) + OP(13,14)*SF(10);
SPP(54) = OP(6,11) + OP(1,11)*SF(3) - OP(2,11)*SF(14) + OP(3,11)*SF(2) + OP(4,11)*SF(4) + OP(14,11)*SPP(2);
SPP(55) = OP(6,13) + OP(1,13)*SF(3) - OP(2,13)*SF(14) + OP(3,13)*SF(2) + OP(4,13)*SF(4) + OP(14,13)*SPP(2);
SPP(56) = OP(6,12) + OP(1,12)*SF(3) - OP(2,12)*SF(14) + OP(3,12)*SF(2) + OP(4,12)*SF(4) + OP(14,12)*SPP(2);
SPP(57) = OP(7,14) + OP(1,14)*SF(14) + OP(2,14)*SF(3) - OP(3,14)*SF(4) + OP(4,14)*SF(2) - OP(14,14)*SPP(1);
SPP(58) = OP(5,14) + OP(1,14)*SF(4) + OP(2,14)*SF(2) + OP(3,14)*SF(14) - OP(4,14)*SF(3) - OP(14,14)*SPP(3);
SPP(59) = OP(6,14) + OP(1,14)*SF(3) - OP(2,14)*SF(14) + OP(3,14)*SF(2) + OP(4,14)*SF(4) + OP(14,14)*SPP(2);
nextP = zeros(22,22);
nextP(1,1) = SPP(17) - SF(7)*SPP(16) - SF(5)*SPP(19) - SF(6)*SPP(18) + SF(8)*SPP(37) + SF(9)*SPP(39) + SF(10)*SPP(38) + (SQ(10)*daxCov)/4 + SQ(13)*dayCov + (SQ(12)*dazCov)/4;
nextP(1,2) = SPP(16) + SQ(7) - SF(5)*SPP(18) + SF(7)*SPP(17) + SF(6)*SPP(19) - SF(9)*SPP(38) + SF(10)*SPP(39) - (SPP(37)*q0)/2;
nextP(2,2) = SPP(12) - SF(5)*SPP(14) + SF(7)*SPP(13) + SF(6)*SPP(15) - SF(9)*SPP(27) + SF(10)*SPP(28) + SQ(11)*daxCov + (SQ(12)*dayCov)/4 + SQ(13)*dazCov - (SPP(26)*q0)/2;
nextP(1,3) = SPP(19) + SQ(8) + SF(5)*SPP(17) - SF(6)*SPP(16) + SF(7)*SPP(18) + SF(8)*SPP(38) - SF(10)*SPP(37) - (SPP(39)*q0)/2;
nextP(2,3) = SPP(15) + SQ(6) + SF(5)*SPP(13) - SF(6)*SPP(12) + SF(7)*SPP(14) + SF(8)*SPP(27) - SF(10)*SPP(26) - (SPP(28)*q0)/2;
nextP(3,3) = SPP(11) + SF(5)*SPP(9) - SF(6)*SPP(8) + SF(7)*SPP(10) + SF(8)*SPP(24) - SF(10)*SPP(23) + (SQ(12)*daxCov)/4 + SQ(11)*dayCov + (SQ(10)*dazCov)/4 - (SPP(25)*q0)/2;
nextP(1,4) = SPP(18) + SQ(5) + SF(5)*SPP(16) + SF(6)*SPP(17) - SF(7)*SPP(19) + SF(9)*SPP(37) - SF(8)*SPP(39) - (SPP(38)*q0)/2;
nextP(2,4) = SPP(14) + SQ(9) + SF(5)*SPP(12) + SF(6)*SPP(13) - SF(7)*SPP(15) + SF(9)*SPP(26) - SF(8)*SPP(28) - (SPP(27)*q0)/2;
nextP(3,4) = SPP(10) + SQ(4) + SF(5)*SPP(8) + SF(6)*SPP(9) - SF(7)*SPP(11) + SF(9)*SPP(23) - SF(8)*SPP(25) - (SPP(24)*q0)/2;
nextP(4,4) = SPP(6) + SF(5)*SPP(4) + SF(6)*SPP(5) - SF(7)*SPP(7) + SF(9)*SPP(20) - SF(8)*SPP(22) + SQ(13)*daxCov + (SQ(10)*dayCov)/4 + SQ(11)*dazCov - (SPP(21)*q0)/2;
nextP(1,5) = OP(1,5) - OP(2,5)*SF(7) - OP(3,5)*SF(5) - OP(4,5)*SF(6) + OP(11,5)*SF(8) + OP(12,5)*SF(9) + OP(13,5)*SF(10) + SF(2)*SPP(16) - SF(3)*SPP(18) + SF(4)*SPP(17) + SF(14)*SPP(19) - SPP(3)*SPP(53);
nextP(2,5) = OP(2,5) + OP(1,5)*SF(7) + OP(3,5)*SF(6) - OP(4,5)*SF(5) + OP(12,5)*SF(10) - OP(13,5)*SF(9) + SF(2)*SPP(12) - SF(3)*SPP(14) + SF(4)*SPP(13) + SF(14)*SPP(15) - SPP(3)*SPP(46) - (OP(11,5)*q0)/2;
nextP(3,5) = OP(3,5) + OP(1,5)*SF(5) - OP(2,5)*SF(6) + OP(4,5)*SF(7) - OP(11,5)*SF(10) + OP(13,5)*SF(8) + SF(2)*SPP(8) - SF(3)*SPP(10) + SF(4)*SPP(9) + SF(14)*SPP(11) - SPP(3)*SPP(45) - (OP(12,5)*q0)/2;
nextP(4,5) = OP(4,5) + OP(1,5)*SF(6) + OP(2,5)*SF(5) - OP(3,5)*SF(7) + OP(11,5)*SF(9) - OP(12,5)*SF(8) + SF(2)*SPP(4) - SF(3)*SPP(6) + SF(4)*SPP(5) + SF(14)*SPP(7) - SPP(3)*SPP(44) - (OP(13,5)*q0)/2;
nextP(5,5) = OP(5,5) + OP(1,5)*SF(4) + OP(2,5)*SF(2) - OP(4,5)*SF(3) + OP(3,5)*SF(14) - OP(14,5)*SPP(3) + SF(2)*SPP(33) - SF(3)*SPP(35) + SF(4)*SPP(34) + SF(14)*SPP(36) - SPP(3)*SPP(58) + SQ(22)^2*dvxCov + SQ(23)^2*dvyCov + SQ(24)^2*dvzCov;
nextP(1,6) = OP(1,6) - OP(2,6)*SF(7) - OP(3,6)*SF(5) - OP(4,6)*SF(6) + OP(11,6)*SF(8) + OP(12,6)*SF(9) + OP(13,6)*SF(10) + SF(3)*SPP(17) + SF(2)*SPP(19) + SF(4)*SPP(18) - SF(14)*SPP(16) + SPP(2)*SPP(53);
nextP(2,6) = OP(2,6) + OP(1,6)*SF(7) + OP(3,6)*SF(6) - OP(4,6)*SF(5) + OP(12,6)*SF(10) - OP(13,6)*SF(9) + SF(3)*SPP(13) + SF(2)*SPP(15) + SF(4)*SPP(14) - SF(14)*SPP(12) + SPP(2)*SPP(46) - (OP(11,6)*q0)/2;
nextP(3,6) = OP(3,6) + OP(1,6)*SF(5) - OP(2,6)*SF(6) + OP(4,6)*SF(7) - OP(11,6)*SF(10) + OP(13,6)*SF(8) + SF(3)*SPP(9) + SF(2)*SPP(11) + SF(4)*SPP(10) - SF(14)*SPP(8) + SPP(2)*SPP(45) - (OP(12,6)*q0)/2;
nextP(4,6) = OP(4,6) + OP(1,6)*SF(6) + OP(2,6)*SF(5) - OP(3,6)*SF(7) + OP(11,6)*SF(9) - OP(12,6)*SF(8) + SF(3)*SPP(5) + SF(2)*SPP(7) + SF(4)*SPP(6) - SF(14)*SPP(4) + SPP(2)*SPP(44) - (OP(13,6)*q0)/2;
nextP(5,6) = OP(5,6) + SQ(3) + OP(1,6)*SF(4) + OP(2,6)*SF(2) - OP(4,6)*SF(3) + OP(3,6)*SF(14) - OP(14,6)*SPP(3) + SF(3)*SPP(34) + SF(2)*SPP(36) + SF(4)*SPP(35) - SF(14)*SPP(33) + SPP(2)*SPP(58);
nextP(6,6) = OP(6,6) + OP(1,6)*SF(3) + OP(3,6)*SF(2) - OP(2,6)*SF(14) + OP(4,6)*SF(4) + OP(14,6)*SPP(2) + SF(3)*SPP(41) + SF(2)*SPP(43) + SF(4)*SPP(42) - SF(14)*SPP(40) + SPP(2)*SPP(59) + SQ(21)^2*dvxCov + SQ(19)^2*dvyCov + SQ(20)^2*dvzCov;
nextP(1,7) = OP(1,7) - OP(2,7)*SF(7) - OP(3,7)*SF(5) - OP(4,7)*SF(6) + OP(11,7)*SF(8) + OP(12,7)*SF(9) + OP(13,7)*SF(10) + SF(3)*SPP(16) + SF(2)*SPP(18) - SF(4)*SPP(19) + SF(14)*SPP(17) - SPP(1)*SPP(53);
nextP(2,7) = OP(2,7) + OP(1,7)*SF(7) + OP(3,7)*SF(6) - OP(4,7)*SF(5) + OP(12,7)*SF(10) - OP(13,7)*SF(9) + SF(3)*SPP(12) + SF(2)*SPP(14) - SF(4)*SPP(15) + SF(14)*SPP(13) - SPP(1)*SPP(46) - (OP(11,7)*q0)/2;
nextP(3,7) = OP(3,7) + OP(1,7)*SF(5) - OP(2,7)*SF(6) + OP(4,7)*SF(7) - OP(11,7)*SF(10) + OP(13,7)*SF(8) + SF(3)*SPP(8) + SF(2)*SPP(10) - SF(4)*SPP(11) + SF(14)*SPP(9) - SPP(1)*SPP(45) - (OP(12,7)*q0)/2;
nextP(4,7) = OP(4,7) + OP(1,7)*SF(6) + OP(2,7)*SF(5) - OP(3,7)*SF(7) + OP(11,7)*SF(9) - OP(12,7)*SF(8) + SF(3)*SPP(4) + SF(2)*SPP(6) - SF(4)*SPP(7) + SF(14)*SPP(5) - SPP(1)*SPP(44) - (OP(13,7)*q0)/2;
nextP(5,7) = OP(5,7) + SQ(2) + OP(1,7)*SF(4) + OP(2,7)*SF(2) - OP(4,7)*SF(3) + OP(3,7)*SF(14) - OP(14,7)*SPP(3) + SF(3)*SPP(33) + SF(2)*SPP(35) - SF(4)*SPP(36) + SF(14)*SPP(34) - SPP(1)*SPP(58);
nextP(6,7) = OP(6,7) + SQ(1) + OP(1,7)*SF(3) + OP(3,7)*SF(2) - OP(2,7)*SF(14) + OP(4,7)*SF(4) + OP(14,7)*SPP(2) + SF(3)*SPP(40) + SF(2)*SPP(42) - SF(4)*SPP(43) + SF(14)*SPP(41) - SPP(1)*SPP(59);
nextP(7,7) = OP(7,7) + OP(2,7)*SF(3) + OP(1,7)*SF(14) - OP(3,7)*SF(4) + OP(4,7)*SF(2) - OP(14,7)*SPP(1) + SF(3)*SPP(29) + SF(2)*SPP(31) - SF(4)*SPP(32) + SF(14)*SPP(30) - SPP(1)*SPP(57) + SQ(17)^2*dvxCov + SQ(18)^2*dvyCov + SQ(16)^2*dvzCov;
nextP(1,8) = OP(1,8) - OP(2,8)*SF(7) - OP(3,8)*SF(5) - OP(4,8)*SF(6) + OP(11,8)*SF(8) + OP(12,8)*SF(9) + OP(13,8)*SF(10) + dt*(OP(1,5) - OP(2,5)*SF(7) - OP(3,5)*SF(5) - OP(4,5)*SF(6) + OP(11,5)*SF(8) + OP(12,5)*SF(9) + OP(13,5)*SF(10));
nextP(2,8) = OP(2,8) + OP(1,8)*SF(7) + OP(3,8)*SF(6) - OP(4,8)*SF(5) + OP(12,8)*SF(10) - OP(13,8)*SF(9) - (OP(11,8)*q0)/2 + dt*(OP(2,5) + OP(1,5)*SF(7) + OP(3,5)*SF(6) - OP(4,5)*SF(5) + OP(12,5)*SF(10) - OP(13,5)*SF(9) - (OP(11,5)*q0)/2);
nextP(3,8) = OP(3,8) + OP(1,8)*SF(5) - OP(2,8)*SF(6) + OP(4,8)*SF(7) - OP(11,8)*SF(10) + OP(13,8)*SF(8) - (OP(12,8)*q0)/2 + dt*(OP(3,5) + OP(1,5)*SF(5) - OP(2,5)*SF(6) + OP(4,5)*SF(7) - OP(11,5)*SF(10) + OP(13,5)*SF(8) - (OP(12,5)*q0)/2);
nextP(4,8) = OP(4,8) + OP(1,8)*SF(6) + OP(2,8)*SF(5) - OP(3,8)*SF(7) + OP(11,8)*SF(9) - OP(12,8)*SF(8) - (OP(13,8)*q0)/2 + dt*(OP(4,5) + OP(1,5)*SF(6) + OP(2,5)*SF(5) - OP(3,5)*SF(7) + OP(11,5)*SF(9) - OP(12,5)*SF(8) - (OP(13,5)*q0)/2);
nextP(5,8) = OP(5,8) + OP(1,8)*SF(4) + OP(2,8)*SF(2) - OP(4,8)*SF(3) + OP(3,8)*SF(14) - OP(14,8)*SPP(3) + dt*(OP(5,5) + OP(1,5)*SF(4) + OP(2,5)*SF(2) - OP(4,5)*SF(3) + OP(3,5)*SF(14) - OP(14,5)*SPP(3));
nextP(6,8) = OP(6,8) + OP(1,8)*SF(3) + OP(3,8)*SF(2) - OP(2,8)*SF(14) + OP(4,8)*SF(4) + OP(14,8)*SPP(2) + dt*(OP(6,5) + OP(1,5)*SF(3) + OP(3,5)*SF(2) - OP(2,5)*SF(14) + OP(4,5)*SF(4) + OP(14,5)*SPP(2));
nextP(7,8) = OP(7,8) + OP(2,8)*SF(3) + OP(1,8)*SF(14) - OP(3,8)*SF(4) + OP(4,8)*SF(2) - OP(14,8)*SPP(1) + dt*(OP(7,5) + OP(2,5)*SF(3) + OP(1,5)*SF(14) - OP(3,5)*SF(4) + OP(4,5)*SF(2) - OP(14,5)*SPP(1));
nextP(8,8) = OP(8,8) + OP(5,8)*dt + dt*(OP(8,5) + OP(5,5)*dt);
nextP(1,9) = OP(1,9) - OP(2,9)*SF(7) - OP(3,9)*SF(5) - OP(4,9)*SF(6) + OP(11,9)*SF(8) + OP(12,9)*SF(9) + OP(13,9)*SF(10) + dt*(OP(1,6) - OP(2,6)*SF(7) - OP(3,6)*SF(5) - OP(4,6)*SF(6) + OP(11,6)*SF(8) + OP(12,6)*SF(9) + OP(13,6)*SF(10));
nextP(2,9) = OP(2,9) + OP(1,9)*SF(7) + OP(3,9)*SF(6) - OP(4,9)*SF(5) + OP(12,9)*SF(10) - OP(13,9)*SF(9) - (OP(11,9)*q0)/2 + dt*(OP(2,6) + OP(1,6)*SF(7) + OP(3,6)*SF(6) - OP(4,6)*SF(5) + OP(12,6)*SF(10) - OP(13,6)*SF(9) - (OP(11,6)*q0)/2);
nextP(3,9) = OP(3,9) + OP(1,9)*SF(5) - OP(2,9)*SF(6) + OP(4,9)*SF(7) - OP(11,9)*SF(10) + OP(13,9)*SF(8) - (OP(12,9)*q0)/2 + dt*(OP(3,6) + OP(1,6)*SF(5) - OP(2,6)*SF(6) + OP(4,6)*SF(7) - OP(11,6)*SF(10) + OP(13,6)*SF(8) - (OP(12,6)*q0)/2);
nextP(4,9) = OP(4,9) + OP(1,9)*SF(6) + OP(2,9)*SF(5) - OP(3,9)*SF(7) + OP(11,9)*SF(9) - OP(12,9)*SF(8) - (OP(13,9)*q0)/2 + dt*(OP(4,6) + OP(1,6)*SF(6) + OP(2,6)*SF(5) - OP(3,6)*SF(7) + OP(11,6)*SF(9) - OP(12,6)*SF(8) - (OP(13,6)*q0)/2);
nextP(5,9) = OP(5,9) + OP(1,9)*SF(4) + OP(2,9)*SF(2) - OP(4,9)*SF(3) + OP(3,9)*SF(14) - OP(14,9)*SPP(3) + dt*(OP(5,6) + OP(1,6)*SF(4) + OP(2,6)*SF(2) - OP(4,6)*SF(3) + OP(3,6)*SF(14) - OP(14,6)*SPP(3));
nextP(6,9) = OP(6,9) + OP(1,9)*SF(3) + OP(3,9)*SF(2) - OP(2,9)*SF(14) + OP(4,9)*SF(4) + OP(14,9)*SPP(2) + dt*(OP(6,6) + OP(1,6)*SF(3) + OP(3,6)*SF(2) - OP(2,6)*SF(14) + OP(4,6)*SF(4) + OP(14,6)*SPP(2));
nextP(7,9) = OP(7,9) + OP(2,9)*SF(3) + OP(1,9)*SF(14) - OP(3,9)*SF(4) + OP(4,9)*SF(2) - OP(14,9)*SPP(1) + dt*(OP(7,6) + OP(2,6)*SF(3) + OP(1,6)*SF(14) - OP(3,6)*SF(4) + OP(4,6)*SF(2) - OP(14,6)*SPP(1));
nextP(8,9) = OP(8,9) + OP(5,9)*dt + dt*(OP(8,6) + OP(5,6)*dt);
nextP(9,9) = OP(9,9) + OP(6,9)*dt + dt*(OP(9,6) + OP(6,6)*dt);
nextP(1,10) = OP(1,10) - OP(2,10)*SF(7) - OP(3,10)*SF(5) - OP(4,10)*SF(6) + OP(11,10)*SF(8) + OP(12,10)*SF(9) + OP(13,10)*SF(10) + dt*(OP(1,7) - OP(2,7)*SF(7) - OP(3,7)*SF(5) - OP(4,7)*SF(6) + OP(11,7)*SF(8) + OP(12,7)*SF(9) + OP(13,7)*SF(10));
nextP(2,10) = OP(2,10) + OP(1,10)*SF(7) + OP(3,10)*SF(6) - OP(4,10)*SF(5) + OP(12,10)*SF(10) - OP(13,10)*SF(9) - (OP(11,10)*q0)/2 + dt*(OP(2,7) + OP(1,7)*SF(7) + OP(3,7)*SF(6) - OP(4,7)*SF(5) + OP(12,7)*SF(10) - OP(13,7)*SF(9) - (OP(11,7)*q0)/2);
nextP(3,10) = OP(3,10) + OP(1,10)*SF(5) - OP(2,10)*SF(6) + OP(4,10)*SF(7) - OP(11,10)*SF(10) + OP(13,10)*SF(8) - (OP(12,10)*q0)/2 + dt*(OP(3,7) + OP(1,7)*SF(5) - OP(2,7)*SF(6) + OP(4,7)*SF(7) - OP(11,7)*SF(10) + OP(13,7)*SF(8) - (OP(12,7)*q0)/2);
nextP(4,10) = OP(4,10) + OP(1,10)*SF(6) + OP(2,10)*SF(5) - OP(3,10)*SF(7) + OP(11,10)*SF(9) - OP(12,10)*SF(8) - (OP(13,10)*q0)/2 + dt*(OP(4,7) + OP(1,7)*SF(6) + OP(2,7)*SF(5) - OP(3,7)*SF(7) + OP(11,7)*SF(9) - OP(12,7)*SF(8) - (OP(13,7)*q0)/2);
nextP(5,10) = OP(5,10) + OP(1,10)*SF(4) + OP(2,10)*SF(2) + OP(3,10)*SF(14) - OP(4,10)*SF(3) - OP(14,10)*SPP(3) + dt*(OP(5,7) + OP(1,7)*SF(4) + OP(2,7)*SF(2) - OP(4,7)*SF(3) + OP(3,7)*SF(14) - OP(14,7)*SPP(3));
nextP(6,10) = OP(6,10) + OP(1,10)*SF(3) - OP(2,10)*SF(14) + OP(3,10)*SF(2) + OP(4,10)*SF(4) + OP(14,10)*SPP(2) + dt*(OP(6,7) + OP(1,7)*SF(3) + OP(3,7)*SF(2) - OP(2,7)*SF(14) + OP(4,7)*SF(4) + OP(14,7)*SPP(2));
nextP(7,10) = OP(7,10) + OP(1,10)*SF(14) + OP(2,10)*SF(3) - OP(3,10)*SF(4) + OP(4,10)*SF(2) - OP(14,10)*SPP(1) + dt*(OP(7,7) + OP(2,7)*SF(3) + OP(1,7)*SF(14) - OP(3,7)*SF(4) + OP(4,7)*SF(2) - OP(14,7)*SPP(1));
nextP(8,10) = OP(8,10) + OP(5,10)*dt + dt*(OP(8,7) + OP(5,7)*dt);
nextP(9,10) = OP(9,10) + OP(6,10)*dt + dt*(OP(9,7) + OP(6,7)*dt);
nextP(10,10) = OP(10,10) + OP(7,10)*dt + dt*(OP(10,7) + OP(7,7)*dt);
nextP(1,11) = SPP(37);
nextP(2,11) = SPP(26);
nextP(3,11) = SPP(23);
nextP(4,11) = SPP(20);
nextP(5,11) = SPP(50);
nextP(6,11) = SPP(54);
nextP(7,11) = SPP(47);
nextP(8,11) = OP(8,11) + OP(5,11)*dt;
nextP(9,11) = OP(9,11) + OP(6,11)*dt;
nextP(10,11) = OP(10,11) + OP(7,11)*dt;
nextP(11,11) = OP(11,11);
nextP(1,12) = SPP(39);
nextP(2,12) = SPP(28);
nextP(3,12) = SPP(25);
nextP(4,12) = SPP(22);
nextP(5,12) = SPP(52);
nextP(6,12) = SPP(56);
nextP(7,12) = SPP(49);
nextP(8,12) = OP(8,12) + OP(5,12)*dt;
nextP(9,12) = OP(9,12) + OP(6,12)*dt;
nextP(10,12) = OP(10,12) + OP(7,12)*dt;
nextP(11,12) = OP(11,12);
nextP(12,12) = OP(12,12);
nextP(1,13) = SPP(38);
nextP(2,13) = SPP(27);
nextP(3,13) = SPP(24);
nextP(4,13) = SPP(21);
nextP(5,13) = SPP(51);
nextP(6,13) = SPP(55);
nextP(7,13) = SPP(48);
nextP(8,13) = OP(8,13) + OP(5,13)*dt;
nextP(9,13) = OP(9,13) + OP(6,13)*dt;
nextP(10,13) = OP(10,13) + OP(7,13)*dt;
nextP(11,13) = OP(11,13);
nextP(12,13) = OP(12,13);
nextP(13,13) = OP(13,13);
nextP(1,14) = SPP(53);
nextP(2,14) = SPP(46);
nextP(3,14) = SPP(45);
nextP(4,14) = SPP(44);
nextP(5,14) = SPP(58);
nextP(6,14) = SPP(59);
nextP(7,14) = SPP(57);
nextP(8,14) = OP(8,14) + OP(5,14)*dt;
nextP(9,14) = OP(9,14) + OP(6,14)*dt;
nextP(10,14) = OP(10,14) + OP(7,14)*dt;
nextP(11,14) = OP(11,14);
nextP(12,14) = OP(12,14);
nextP(13,14) = OP(13,14);
nextP(14,14) = OP(14,14);
nextP(1,15) = OP(1,15) - OP(2,15)*SF(7) - OP(3,15)*SF(5) - OP(4,15)*SF(6) + OP(11,15)*SF(8) + OP(12,15)*SF(9) + OP(13,15)*SF(10);
nextP(2,15) = OP(2,15) + OP(1,15)*SF(7) + OP(3,15)*SF(6) - OP(4,15)*SF(5) + OP(12,15)*SF(10) - OP(13,15)*SF(9) - (OP(11,15)*q0)/2;
nextP(3,15) = OP(3,15) + OP(1,15)*SF(5) - OP(2,15)*SF(6) + OP(4,15)*SF(7) - OP(11,15)*SF(10) + OP(13,15)*SF(8) - (OP(12,15)*q0)/2;
nextP(4,15) = OP(4,15) + OP(1,15)*SF(6) + OP(2,15)*SF(5) - OP(3,15)*SF(7) + OP(11,15)*SF(9) - OP(12,15)*SF(8) - (OP(13,15)*q0)/2;
nextP(5,15) = OP(5,15) + OP(1,15)*SF(4) + OP(2,15)*SF(2) + OP(3,15)*SF(14) - OP(4,15)*SF(3) - OP(14,15)*SPP(3);
nextP(6,15) = OP(6,15) + OP(1,15)*SF(3) - OP(2,15)*SF(14) + OP(3,15)*SF(2) + OP(4,15)*SF(4) + OP(14,15)*SPP(2);
nextP(7,15) = OP(7,15) + OP(1,15)*SF(14) + OP(2,15)*SF(3) - OP(3,15)*SF(4) + OP(4,15)*SF(2) - OP(14,15)*SPP(1);
nextP(8,15) = OP(8,15) + OP(5,15)*dt;
nextP(9,15) = OP(9,15) + OP(6,15)*dt;
nextP(10,15) = OP(10,15) + OP(7,15)*dt;
nextP(11,15) = OP(11,15);
nextP(12,15) = OP(12,15);
nextP(13,15) = OP(13,15);
nextP(14,15) = OP(14,15);
nextP(15,15) = OP(15,15);
nextP(1,16) = OP(1,16) - OP(2,16)*SF(7) - OP(3,16)*SF(5) - OP(4,16)*SF(6) + OP(11,16)*SF(8) + OP(12,16)*SF(9) + OP(13,16)*SF(10);
nextP(2,16) = OP(2,16) + OP(1,16)*SF(7) + OP(3,16)*SF(6) - OP(4,16)*SF(5) + OP(12,16)*SF(10) - OP(13,16)*SF(9) - (OP(11,16)*q0)/2;
nextP(3,16) = OP(3,16) + OP(1,16)*SF(5) - OP(2,16)*SF(6) + OP(4,16)*SF(7) - OP(11,16)*SF(10) + OP(13,16)*SF(8) - (OP(12,16)*q0)/2;
nextP(4,16) = OP(4,16) + OP(1,16)*SF(6) + OP(2,16)*SF(5) - OP(3,16)*SF(7) + OP(11,16)*SF(9) - OP(12,16)*SF(8) - (OP(13,16)*q0)/2;
nextP(5,16) = OP(5,16) + OP(1,16)*SF(4) + OP(2,16)*SF(2) + OP(3,16)*SF(14) - OP(4,16)*SF(3) - OP(14,16)*SPP(3);
nextP(6,16) = OP(6,16) + OP(1,16)*SF(3) - OP(2,16)*SF(14) + OP(3,16)*SF(2) + OP(4,16)*SF(4) + OP(14,16)*SPP(2);
nextP(7,16) = OP(7,16) + OP(1,16)*SF(14) + OP(2,16)*SF(3) - OP(3,16)*SF(4) + OP(4,16)*SF(2) - OP(14,16)*SPP(1);
nextP(8,16) = OP(8,16) + OP(5,16)*dt;
nextP(9,16) = OP(9,16) + OP(6,16)*dt;
nextP(10,16) = OP(10,16) + OP(7,16)*dt;
nextP(11,16) = OP(11,16);
nextP(12,16) = OP(12,16);
nextP(13,16) = OP(13,16);
nextP(14,16) = OP(14,16);
nextP(15,16) = OP(15,16);
nextP(16,16) = OP(16,16);
nextP(1,17) = OP(1,17) - OP(2,17)*SF(7) - OP(3,17)*SF(5) - OP(4,17)*SF(6) + OP(11,17)*SF(8) + OP(12,17)*SF(9) + OP(13,17)*SF(10);
nextP(2,17) = OP(2,17) + OP(1,17)*SF(7) + OP(3,17)*SF(6) - OP(4,17)*SF(5) + OP(12,17)*SF(10) - OP(13,17)*SF(9) - (OP(11,17)*q0)/2;
nextP(3,17) = OP(3,17) + OP(1,17)*SF(5) - OP(2,17)*SF(6) + OP(4,17)*SF(7) - OP(11,17)*SF(10) + OP(13,17)*SF(8) - (OP(12,17)*q0)/2;
nextP(4,17) = OP(4,17) + OP(1,17)*SF(6) + OP(2,17)*SF(5) - OP(3,17)*SF(7) + OP(11,17)*SF(9) - OP(12,17)*SF(8) - (OP(13,17)*q0)/2;
nextP(5,17) = OP(5,17) + OP(1,17)*SF(4) + OP(2,17)*SF(2) + OP(3,17)*SF(14) - OP(4,17)*SF(3) - OP(14,17)*SPP(3);
nextP(6,17) = OP(6,17) + OP(1,17)*SF(3) - OP(2,17)*SF(14) + OP(3,17)*SF(2) + OP(4,17)*SF(4) + OP(14,17)*SPP(2);
nextP(7,17) = OP(7,17) + OP(1,17)*SF(14) + OP(2,17)*SF(3) - OP(3,17)*SF(4) + OP(4,17)*SF(2) - OP(14,17)*SPP(1);
nextP(8,17) = OP(8,17) + OP(5,17)*dt;
nextP(9,17) = OP(9,17) + OP(6,17)*dt;
nextP(10,17) = OP(10,17) + OP(7,17)*dt;
nextP(11,17) = OP(11,17);
nextP(12,17) = OP(12,17);
nextP(13,17) = OP(13,17);
nextP(14,17) = OP(14,17);
nextP(15,17) = OP(15,17);
nextP(16,17) = OP(16,17);
nextP(17,17) = OP(17,17);
nextP(1,18) = OP(1,18) - OP(2,18)*SF(7) - OP(3,18)*SF(5) - OP(4,18)*SF(6) + OP(11,18)*SF(8) + OP(12,18)*SF(9) + OP(13,18)*SF(10);
nextP(2,18) = OP(2,18) + OP(1,18)*SF(7) + OP(3,18)*SF(6) - OP(4,18)*SF(5) + OP(12,18)*SF(10) - OP(13,18)*SF(9) - (OP(11,18)*q0)/2;
nextP(3,18) = OP(3,18) + OP(1,18)*SF(5) - OP(2,18)*SF(6) + OP(4,18)*SF(7) - OP(11,18)*SF(10) + OP(13,18)*SF(8) - (OP(12,18)*q0)/2;
nextP(4,18) = OP(4,18) + OP(1,18)*SF(6) + OP(2,18)*SF(5) - OP(3,18)*SF(7) + OP(11,18)*SF(9) - OP(12,18)*SF(8) - (OP(13,18)*q0)/2;
nextP(5,18) = OP(5,18) + OP(1,18)*SF(4) + OP(2,18)*SF(2) + OP(3,18)*SF(14) - OP(4,18)*SF(3) - OP(14,18)*SPP(3);
nextP(6,18) = OP(6,18) + OP(1,18)*SF(3) - OP(2,18)*SF(14) + OP(3,18)*SF(2) + OP(4,18)*SF(4) + OP(14,18)*SPP(2);
nextP(7,18) = OP(7,18) + OP(1,18)*SF(14) + OP(2,18)*SF(3) - OP(3,18)*SF(4) + OP(4,18)*SF(2) - OP(14,18)*SPP(1);
nextP(8,18) = OP(8,18) + OP(5,18)*dt;
nextP(9,18) = OP(9,18) + OP(6,18)*dt;
nextP(10,18) = OP(10,18) + OP(7,18)*dt;
nextP(11,18) = OP(11,18);
nextP(12,18) = OP(12,18);
nextP(13,18) = OP(13,18);
nextP(14,18) = OP(14,18);
nextP(15,18) = OP(15,18);
nextP(16,18) = OP(16,18);
nextP(17,18) = OP(17,18);
nextP(18,18) = OP(18,18);
nextP(1,19) = OP(1,19) - OP(2,19)*SF(7) - OP(3,19)*SF(5) - OP(4,19)*SF(6) + OP(11,19)*SF(8) + OP(12,19)*SF(9) + OP(13,19)*SF(10);
nextP(2,19) = OP(2,19) + OP(1,19)*SF(7) + OP(3,19)*SF(6) - OP(4,19)*SF(5) + OP(12,19)*SF(10) - OP(13,19)*SF(9) - (OP(11,19)*q0)/2;
nextP(3,19) = OP(3,19) + OP(1,19)*SF(5) - OP(2,19)*SF(6) + OP(4,19)*SF(7) - OP(11,19)*SF(10) + OP(13,19)*SF(8) - (OP(12,19)*q0)/2;
nextP(4,19) = OP(4,19) + OP(1,19)*SF(6) + OP(2,19)*SF(5) - OP(3,19)*SF(7) + OP(11,19)*SF(9) - OP(12,19)*SF(8) - (OP(13,19)*q0)/2;
nextP(5,19) = OP(5,19) + OP(1,19)*SF(4) + OP(2,19)*SF(2) + OP(3,19)*SF(14) - OP(4,19)*SF(3) - OP(14,19)*SPP(3);
nextP(6,19) = OP(6,19) + OP(1,19)*SF(3) - OP(2,19)*SF(14) + OP(3,19)*SF(2) + OP(4,19)*SF(4) + OP(14,19)*SPP(2);
nextP(7,19) = OP(7,19) + OP(1,19)*SF(14) + OP(2,19)*SF(3) - OP(3,19)*SF(4) + OP(4,19)*SF(2) - OP(14,19)*SPP(1);
nextP(8,19) = OP(8,19) + OP(5,19)*dt;
nextP(9,19) = OP(9,19) + OP(6,19)*dt;
nextP(10,19) = OP(10,19) + OP(7,19)*dt;
nextP(11,19) = OP(11,19);
nextP(12,19) = OP(12,19);
nextP(13,19) = OP(13,19);
nextP(14,19) = OP(14,19);
nextP(15,19) = OP(15,19);
nextP(16,19) = OP(16,19);
nextP(17,19) = OP(17,19);
nextP(18,19) = OP(18,19);
nextP(19,19) = OP(19,19);
nextP(1,20) = OP(1,20) - OP(2,20)*SF(7) - OP(3,20)*SF(5) - OP(4,20)*SF(6) + OP(11,20)*SF(8) + OP(12,20)*SF(9) + OP(13,20)*SF(10);
nextP(2,20) = OP(2,20) + OP(1,20)*SF(7) + OP(3,20)*SF(6) - OP(4,20)*SF(5) + OP(12,20)*SF(10) - OP(13,20)*SF(9) - (OP(11,20)*q0)/2;
nextP(3,20) = OP(3,20) + OP(1,20)*SF(5) - OP(2,20)*SF(6) + OP(4,20)*SF(7) - OP(11,20)*SF(10) + OP(13,20)*SF(8) - (OP(12,20)*q0)/2;
nextP(4,20) = OP(4,20) + OP(1,20)*SF(6) + OP(2,20)*SF(5) - OP(3,20)*SF(7) + OP(11,20)*SF(9) - OP(12,20)*SF(8) - (OP(13,20)*q0)/2;
nextP(5,20) = OP(5,20) + OP(1,20)*SF(4) + OP(2,20)*SF(2) + OP(3,20)*SF(14) - OP(4,20)*SF(3) - OP(14,20)*SPP(3);
nextP(6,20) = OP(6,20) + OP(1,20)*SF(3) - OP(2,20)*SF(14) + OP(3,20)*SF(2) + OP(4,20)*SF(4) + OP(14,20)*SPP(2);
nextP(7,20) = OP(7,20) + OP(1,20)*SF(14) + OP(2,20)*SF(3) - OP(3,20)*SF(4) + OP(4,20)*SF(2) - OP(14,20)*SPP(1);
nextP(8,20) = OP(8,20) + OP(5,20)*dt;
nextP(9,20) = OP(9,20) + OP(6,20)*dt;
nextP(10,20) = OP(10,20) + OP(7,20)*dt;
nextP(11,20) = OP(11,20);
nextP(12,20) = OP(12,20);
nextP(13,20) = OP(13,20);
nextP(14,20) = OP(14,20);
nextP(15,20) = OP(15,20);
nextP(16,20) = OP(16,20);
nextP(17,20) = OP(17,20);
nextP(18,20) = OP(18,20);
nextP(19,20) = OP(19,20);
nextP(20,20) = OP(20,20);
nextP(1,21) = OP(1,21) - OP(2,21)*SF(7) - OP(3,21)*SF(5) - OP(4,21)*SF(6) + OP(11,21)*SF(8) + OP(12,21)*SF(9) + OP(13,21)*SF(10);
nextP(2,21) = OP(2,21) + OP(1,21)*SF(7) + OP(3,21)*SF(6) - OP(4,21)*SF(5) + OP(12,21)*SF(10) - OP(13,21)*SF(9) - (OP(11,21)*q0)/2;
nextP(3,21) = OP(3,21) + OP(1,21)*SF(5) - OP(2,21)*SF(6) + OP(4,21)*SF(7) - OP(11,21)*SF(10) + OP(13,21)*SF(8) - (OP(12,21)*q0)/2;
nextP(4,21) = OP(4,21) + OP(1,21)*SF(6) + OP(2,21)*SF(5) - OP(3,21)*SF(7) + OP(11,21)*SF(9) - OP(12,21)*SF(8) - (OP(13,21)*q0)/2;
nextP(5,21) = OP(5,21) + OP(1,21)*SF(4) + OP(2,21)*SF(2) + OP(3,21)*SF(14) - OP(4,21)*SF(3) - OP(14,21)*SPP(3);
nextP(6,21) = OP(6,21) + OP(1,21)*SF(3) - OP(2,21)*SF(14) + OP(3,21)*SF(2) + OP(4,21)*SF(4) + OP(14,21)*SPP(2);
nextP(7,21) = OP(7,21) + OP(1,21)*SF(14) + OP(2,21)*SF(3) - OP(3,21)*SF(4) + OP(4,21)*SF(2) - OP(14,21)*SPP(1);
nextP(8,21) = OP(8,21) + OP(5,21)*dt;
nextP(9,21) = OP(9,21) + OP(6,21)*dt;
nextP(10,21) = OP(10,21) + OP(7,21)*dt;
nextP(11,21) = OP(11,21);
nextP(12,21) = OP(12,21);
nextP(13,21) = OP(13,21);
nextP(14,21) = OP(14,21);
nextP(15,21) = OP(15,21);
nextP(16,21) = OP(16,21);
nextP(17,21) = OP(17,21);
nextP(18,21) = OP(18,21);
nextP(19,21) = OP(19,21);
nextP(20,21) = OP(20,21);
nextP(21,21) = OP(21,21);
nextP(1,22) = OP(1,22) - OP(2,22)*SF(7) - OP(3,22)*SF(5) - OP(4,22)*SF(6) + OP(11,22)*SF(8) + OP(12,22)*SF(9) + OP(13,22)*SF(10);
nextP(2,22) = OP(2,22) + OP(1,22)*SF(7) + OP(3,22)*SF(6) - OP(4,22)*SF(5) + OP(12,22)*SF(10) - OP(13,22)*SF(9) - (OP(11,22)*q0)/2;
nextP(3,22) = OP(3,22) + OP(1,22)*SF(5) - OP(2,22)*SF(6) + OP(4,22)*SF(7) - OP(11,22)*SF(10) + OP(13,22)*SF(8) - (OP(12,22)*q0)/2;
nextP(4,22) = OP(4,22) + OP(1,22)*SF(6) + OP(2,22)*SF(5) - OP(3,22)*SF(7) + OP(11,22)*SF(9) - OP(12,22)*SF(8) - (OP(13,22)*q0)/2;
nextP(5,22) = OP(5,22) + OP(1,22)*SF(4) + OP(2,22)*SF(2) + OP(3,22)*SF(14) - OP(4,22)*SF(3) - OP(14,22)*SPP(3);
nextP(6,22) = OP(6,22) + OP(1,22)*SF(3) - OP(2,22)*SF(14) + OP(3,22)*SF(2) + OP(4,22)*SF(4) + OP(14,22)*SPP(2);
nextP(7,22) = OP(7,22) + OP(1,22)*SF(14) + OP(2,22)*SF(3) - OP(3,22)*SF(4) + OP(4,22)*SF(2) - OP(14,22)*SPP(1);
nextP(8,22) = OP(8,22) + OP(5,22)*dt;
nextP(9,22) = OP(9,22) + OP(6,22)*dt;
nextP(10,22) = OP(10,22) + OP(7,22)*dt;
nextP(11,22) = OP(11,22);
nextP(12,22) = OP(12,22);
nextP(13,22) = OP(13,22);
nextP(14,22) = OP(14,22);
nextP(15,22) = OP(15,22);
nextP(16,22) = OP(16,22);
nextP(17,22) = OP(17,22);
nextP(18,22) = OP(18,22);
nextP(19,22) = OP(19,22);
nextP(20,22) = OP(20,22);
nextP(21,22) = OP(21,22);
nextP(22,22) = OP(22,22);
H_VP = zeros(6,22);
H_VP(1,5) = 1;
H_VP(2,6) = 1;
H_VP(3,7) = 1;
H_VP(4,8) = 1;
H_VP(5,9) = 1;
H_VP(6,10) = 1;
SK_VP = zeros(6,1);
SK_VP(1,1) = 1/(OP(10,10) + R_PD);
SK_VP(2,1) = 1/(OP(9,9) + R_PE);
SK_VP(3,1) = 1/(OP(8,8) + R_PN);
SK_VP(4,1) = 1/(OP(7,7) + R_VD);
SK_VP(5,1) = 1/(OP(6,6) + R_VE);
SK_VP(6,1) = 1/(OP(5,5) + R_VN);
Kfusion = zeros(22,6);
Kfusion(1,1) = OP(1,5)*SK_VP(6);
Kfusion(1,2) = OP(1,6)*SK_VP(5);
Kfusion(1,3) = OP(1,7)*SK_VP(4);
Kfusion(1,4) = OP(1,8)*SK_VP(3);
Kfusion(1,5) = OP(1,9)*SK_VP(2);
Kfusion(1,6) = OP(1,10)*SK_VP(1);
Kfusion(2,1) = OP(2,5)*SK_VP(6);
Kfusion(2,2) = OP(2,6)*SK_VP(5);
Kfusion(2,3) = OP(2,7)*SK_VP(4);
Kfusion(2,4) = OP(2,8)*SK_VP(3);
Kfusion(2,5) = OP(2,9)*SK_VP(2);
Kfusion(2,6) = OP(2,10)*SK_VP(1);
Kfusion(3,1) = OP(3,5)*SK_VP(6);
Kfusion(3,2) = OP(3,6)*SK_VP(5);
Kfusion(3,3) = OP(3,7)*SK_VP(4);
Kfusion(3,4) = OP(3,8)*SK_VP(3);
Kfusion(3,5) = OP(3,9)*SK_VP(2);
Kfusion(3,6) = OP(3,10)*SK_VP(1);
Kfusion(4,1) = OP(4,5)*SK_VP(6);
Kfusion(4,2) = OP(4,6)*SK_VP(5);
Kfusion(4,3) = OP(4,7)*SK_VP(4);
Kfusion(4,4) = OP(4,8)*SK_VP(3);
Kfusion(4,5) = OP(4,9)*SK_VP(2);
Kfusion(4,6) = OP(4,10)*SK_VP(1);
Kfusion(5,1) = OP(5,5)*SK_VP(6);
Kfusion(5,2) = OP(5,6)*SK_VP(5);
Kfusion(5,3) = OP(5,7)*SK_VP(4);
Kfusion(5,4) = OP(5,8)*SK_VP(3);
Kfusion(5,5) = OP(5,9)*SK_VP(2);
Kfusion(5,6) = OP(5,10)*SK_VP(1);
Kfusion(6,1) = OP(6,5)*SK_VP(6);
Kfusion(6,2) = OP(6,6)*SK_VP(5);
Kfusion(6,3) = OP(6,7)*SK_VP(4);
Kfusion(6,4) = OP(6,8)*SK_VP(3);
Kfusion(6,5) = OP(6,9)*SK_VP(2);
Kfusion(6,6) = OP(6,10)*SK_VP(1);
Kfusion(7,1) = OP(7,5)*SK_VP(6);
Kfusion(7,2) = OP(7,6)*SK_VP(5);
Kfusion(7,3) = OP(7,7)*SK_VP(4);
Kfusion(7,4) = OP(7,8)*SK_VP(3);
Kfusion(7,5) = OP(7,9)*SK_VP(2);
Kfusion(7,6) = OP(7,10)*SK_VP(1);
Kfusion(8,1) = OP(8,5)*SK_VP(6);
Kfusion(8,2) = OP(8,6)*SK_VP(5);
Kfusion(8,3) = OP(8,7)*SK_VP(4);
Kfusion(8,4) = OP(8,8)*SK_VP(3);
Kfusion(8,5) = OP(8,9)*SK_VP(2);
Kfusion(8,6) = OP(8,10)*SK_VP(1);
Kfusion(9,1) = OP(9,5)*SK_VP(6);
Kfusion(9,2) = OP(9,6)*SK_VP(5);
Kfusion(9,3) = OP(9,7)*SK_VP(4);
Kfusion(9,4) = OP(9,8)*SK_VP(3);
Kfusion(9,5) = OP(9,9)*SK_VP(2);
Kfusion(9,6) = OP(9,10)*SK_VP(1);
Kfusion(10,1) = OP(10,5)*SK_VP(6);
Kfusion(10,2) = OP(10,6)*SK_VP(5);
Kfusion(10,3) = OP(10,7)*SK_VP(4);
Kfusion(10,4) = OP(10,8)*SK_VP(3);
Kfusion(10,5) = OP(10,9)*SK_VP(2);
Kfusion(10,6) = OP(10,10)*SK_VP(1);
Kfusion(11,1) = OP(11,5)*SK_VP(6);
Kfusion(11,2) = OP(11,6)*SK_VP(5);
Kfusion(11,3) = OP(11,7)*SK_VP(4);
Kfusion(11,4) = OP(11,8)*SK_VP(3);
Kfusion(11,5) = OP(11,9)*SK_VP(2);
Kfusion(11,6) = OP(11,10)*SK_VP(1);
Kfusion(12,1) = OP(12,5)*SK_VP(6);
Kfusion(12,2) = OP(12,6)*SK_VP(5);
Kfusion(12,3) = OP(12,7)*SK_VP(4);
Kfusion(12,4) = OP(12,8)*SK_VP(3);
Kfusion(12,5) = OP(12,9)*SK_VP(2);
Kfusion(12,6) = OP(12,10)*SK_VP(1);
Kfusion(13,1) = OP(13,5)*SK_VP(6);
Kfusion(13,2) = OP(13,6)*SK_VP(5);
Kfusion(13,3) = OP(13,7)*SK_VP(4);
Kfusion(13,4) = OP(13,8)*SK_VP(3);
Kfusion(13,5) = OP(13,9)*SK_VP(2);
Kfusion(13,6) = OP(13,10)*SK_VP(1);
Kfusion(14,1) = OP(14,5)*SK_VP(6);
Kfusion(14,2) = OP(14,6)*SK_VP(5);
Kfusion(14,3) = OP(14,7)*SK_VP(4);
Kfusion(14,4) = OP(14,8)*SK_VP(3);
Kfusion(14,5) = OP(14,9)*SK_VP(2);
Kfusion(14,6) = OP(14,10)*SK_VP(1);
Kfusion(15,1) = OP(15,5)*SK_VP(6);
Kfusion(15,2) = OP(15,6)*SK_VP(5);
Kfusion(15,3) = OP(15,7)*SK_VP(4);
Kfusion(15,4) = OP(15,8)*SK_VP(3);
Kfusion(15,5) = OP(15,9)*SK_VP(2);
Kfusion(15,6) = OP(15,10)*SK_VP(1);
Kfusion(16,1) = OP(16,5)*SK_VP(6);
Kfusion(16,2) = OP(16,6)*SK_VP(5);
Kfusion(16,3) = OP(16,7)*SK_VP(4);
Kfusion(16,4) = OP(16,8)*SK_VP(3);
Kfusion(16,5) = OP(16,9)*SK_VP(2);
Kfusion(16,6) = OP(16,10)*SK_VP(1);
Kfusion(17,1) = OP(17,5)*SK_VP(6);
Kfusion(17,2) = OP(17,6)*SK_VP(5);
Kfusion(17,3) = OP(17,7)*SK_VP(4);
Kfusion(17,4) = OP(17,8)*SK_VP(3);
Kfusion(17,5) = OP(17,9)*SK_VP(2);
Kfusion(17,6) = OP(17,10)*SK_VP(1);
Kfusion(18,1) = OP(18,5)*SK_VP(6);
Kfusion(18,2) = OP(18,6)*SK_VP(5);
Kfusion(18,3) = OP(18,7)*SK_VP(4);
Kfusion(18,4) = OP(18,8)*SK_VP(3);
Kfusion(18,5) = OP(18,9)*SK_VP(2);
Kfusion(18,6) = OP(18,10)*SK_VP(1);
Kfusion(19,1) = OP(19,5)*SK_VP(6);
Kfusion(19,2) = OP(19,6)*SK_VP(5);
Kfusion(19,3) = OP(19,7)*SK_VP(4);
Kfusion(19,4) = OP(19,8)*SK_VP(3);
Kfusion(19,5) = OP(19,9)*SK_VP(2);
Kfusion(19,6) = OP(19,10)*SK_VP(1);
Kfusion(20,1) = OP(20,5)*SK_VP(6);
Kfusion(20,2) = OP(20,6)*SK_VP(5);
Kfusion(20,3) = OP(20,7)*SK_VP(4);
Kfusion(20,4) = OP(20,8)*SK_VP(3);
Kfusion(20,5) = OP(20,9)*SK_VP(2);
Kfusion(20,6) = OP(20,10)*SK_VP(1);
Kfusion(21,1) = OP(21,5)*SK_VP(6);
Kfusion(21,2) = OP(21,6)*SK_VP(5);
Kfusion(21,3) = OP(21,7)*SK_VP(4);
Kfusion(21,4) = OP(21,8)*SK_VP(3);
Kfusion(21,5) = OP(21,9)*SK_VP(2);
Kfusion(21,6) = OP(21,10)*SK_VP(1);
Kfusion(22,1) = OP(22,5)*SK_VP(6);
Kfusion(22,2) = OP(22,6)*SK_VP(5);
Kfusion(22,3) = OP(22,7)*SK_VP(4);
Kfusion(22,4) = OP(22,8)*SK_VP(3);
Kfusion(22,5) = OP(22,9)*SK_VP(2);
Kfusion(22,6) = OP(22,10)*SK_VP(1);
SH_TAS = zeros(3,1);
SH_TAS(1) = 1/((ve - vwe)^2 + (vn - vwn)^2 + vd^2)^(1/2);
SH_TAS(2) = (SH_TAS(1)*(2*ve - 2*vwe))/2;
SH_TAS(3) = (SH_TAS(1)*(2*vn - 2*vwn))/2;
H_TAS = zeros(1,22);
H_TAS(1,5) = SH_TAS(3);
H_TAS(1,6) = SH_TAS(2);
H_TAS(1,7) = SH_TAS(1)*vd;
H_TAS(1,15) = -SH_TAS(3);
H_TAS(1,16) = -SH_TAS(2);
SK_TAS = zeros(1,1);
SK_TAS(1) = 1/(R_TAS + SH_TAS(3)*(OP(5,5)*SH_TAS(3) + OP(6,5)*SH_TAS(2) - OP(15,5)*SH_TAS(3) - OP(16,5)*SH_TAS(2) + OP(7,5)*SH_TAS(1)*vd) + SH_TAS(2)*(OP(5,6)*SH_TAS(3) + OP(6,6)*SH_TAS(2) - OP(15,6)*SH_TAS(3) - OP(16,6)*SH_TAS(2) + OP(7,6)*SH_TAS(1)*vd) - SH_TAS(3)*(OP(5,15)*SH_TAS(3) + OP(6,15)*SH_TAS(2) - OP(15,15)*SH_TAS(3) - OP(16,15)*SH_TAS(2) + OP(7,15)*SH_TAS(1)*vd) - SH_TAS(2)*(OP(5,16)*SH_TAS(3) + OP(6,16)*SH_TAS(2) - OP(15,16)*SH_TAS(3) - OP(16,16)*SH_TAS(2) + OP(7,16)*SH_TAS(1)*vd) + SH_TAS(1)*vd*(OP(5,7)*SH_TAS(3) + OP(6,7)*SH_TAS(2) - OP(15,7)*SH_TAS(3) - OP(16,7)*SH_TAS(2) + OP(7,7)*SH_TAS(1)*vd));
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_TAS(1)*(OP(1,5)*SH_TAS(3) + OP(1,6)*SH_TAS(2) - OP(1,15)*SH_TAS(3) - OP(1,16)*SH_TAS(2) + OP(1,7)*SH_TAS(1)*vd);
Kfusion(2) = SK_TAS(1)*(OP(2,5)*SH_TAS(3) + OP(2,6)*SH_TAS(2) - OP(2,15)*SH_TAS(3) - OP(2,16)*SH_TAS(2) + OP(2,7)*SH_TAS(1)*vd);
Kfusion(3) = SK_TAS(1)*(OP(3,5)*SH_TAS(3) + OP(3,6)*SH_TAS(2) - OP(3,15)*SH_TAS(3) - OP(3,16)*SH_TAS(2) + OP(3,7)*SH_TAS(1)*vd);
Kfusion(4) = SK_TAS(1)*(OP(4,5)*SH_TAS(3) + OP(4,6)*SH_TAS(2) - OP(4,15)*SH_TAS(3) - OP(4,16)*SH_TAS(2) + OP(4,7)*SH_TAS(1)*vd);
Kfusion(5) = SK_TAS(1)*(OP(5,5)*SH_TAS(3) + OP(5,6)*SH_TAS(2) - OP(5,15)*SH_TAS(3) - OP(5,16)*SH_TAS(2) + OP(5,7)*SH_TAS(1)*vd);
Kfusion(6) = SK_TAS(1)*(OP(6,5)*SH_TAS(3) + OP(6,6)*SH_TAS(2) - OP(6,15)*SH_TAS(3) - OP(6,16)*SH_TAS(2) + OP(6,7)*SH_TAS(1)*vd);
Kfusion(7) = SK_TAS(1)*(OP(7,5)*SH_TAS(3) + OP(7,6)*SH_TAS(2) - OP(7,15)*SH_TAS(3) - OP(7,16)*SH_TAS(2) + OP(7,7)*SH_TAS(1)*vd);
Kfusion(8) = SK_TAS(1)*(OP(8,5)*SH_TAS(3) + OP(8,6)*SH_TAS(2) - OP(8,15)*SH_TAS(3) - OP(8,16)*SH_TAS(2) + OP(8,7)*SH_TAS(1)*vd);
Kfusion(9) = SK_TAS(1)*(OP(9,5)*SH_TAS(3) + OP(9,6)*SH_TAS(2) - OP(9,15)*SH_TAS(3) - OP(9,16)*SH_TAS(2) + OP(9,7)*SH_TAS(1)*vd);
Kfusion(10) = SK_TAS(1)*(OP(10,5)*SH_TAS(3) + OP(10,6)*SH_TAS(2) - OP(10,15)*SH_TAS(3) - OP(10,16)*SH_TAS(2) + OP(10,7)*SH_TAS(1)*vd);
Kfusion(11) = SK_TAS(1)*(OP(11,5)*SH_TAS(3) + OP(11,6)*SH_TAS(2) - OP(11,15)*SH_TAS(3) - OP(11,16)*SH_TAS(2) + OP(11,7)*SH_TAS(1)*vd);
Kfusion(12) = SK_TAS(1)*(OP(12,5)*SH_TAS(3) + OP(12,6)*SH_TAS(2) - OP(12,15)*SH_TAS(3) - OP(12,16)*SH_TAS(2) + OP(12,7)*SH_TAS(1)*vd);
Kfusion(13) = SK_TAS(1)*(OP(13,5)*SH_TAS(3) + OP(13,6)*SH_TAS(2) - OP(13,15)*SH_TAS(3) - OP(13,16)*SH_TAS(2) + OP(13,7)*SH_TAS(1)*vd);
Kfusion(14) = SK_TAS(1)*(OP(14,5)*SH_TAS(3) + OP(14,6)*SH_TAS(2) - OP(14,15)*SH_TAS(3) - OP(14,16)*SH_TAS(2) + OP(14,7)*SH_TAS(1)*vd);
Kfusion(15) = SK_TAS(1)*(OP(15,5)*SH_TAS(3) + OP(15,6)*SH_TAS(2) - OP(15,15)*SH_TAS(3) - OP(15,16)*SH_TAS(2) + OP(15,7)*SH_TAS(1)*vd);
Kfusion(16) = SK_TAS(1)*(OP(16,5)*SH_TAS(3) + OP(16,6)*SH_TAS(2) - OP(16,15)*SH_TAS(3) - OP(16,16)*SH_TAS(2) + OP(16,7)*SH_TAS(1)*vd);
Kfusion(17) = SK_TAS(1)*(OP(17,5)*SH_TAS(3) + OP(17,6)*SH_TAS(2) - OP(17,15)*SH_TAS(3) - OP(17,16)*SH_TAS(2) + OP(17,7)*SH_TAS(1)*vd);
Kfusion(18) = SK_TAS(1)*(OP(18,5)*SH_TAS(3) + OP(18,6)*SH_TAS(2) - OP(18,15)*SH_TAS(3) - OP(18,16)*SH_TAS(2) + OP(18,7)*SH_TAS(1)*vd);
Kfusion(19) = SK_TAS(1)*(OP(19,5)*SH_TAS(3) + OP(19,6)*SH_TAS(2) - OP(19,15)*SH_TAS(3) - OP(19,16)*SH_TAS(2) + OP(19,7)*SH_TAS(1)*vd);
Kfusion(20) = SK_TAS(1)*(OP(20,5)*SH_TAS(3) + OP(20,6)*SH_TAS(2) - OP(20,15)*SH_TAS(3) - OP(20,16)*SH_TAS(2) + OP(20,7)*SH_TAS(1)*vd);
Kfusion(21) = SK_TAS(1)*(OP(21,5)*SH_TAS(3) + OP(21,6)*SH_TAS(2) - OP(21,15)*SH_TAS(3) - OP(21,16)*SH_TAS(2) + OP(21,7)*SH_TAS(1)*vd);
Kfusion(22) = SK_TAS(1)*(OP(22,5)*SH_TAS(3) + OP(22,6)*SH_TAS(2) - OP(22,15)*SH_TAS(3) - OP(22,16)*SH_TAS(2) + OP(22,7)*SH_TAS(1)*vd);
SH_MAG = zeros(16,1);
SH_MAG(1) = 2*magD*q3 + 2*magE*q2 + 2*magN*q1;
SH_MAG(2) = 2*magD*q0 - 2*magE*q1 + 2*magN*q2;
SH_MAG(3) = 2*magD*q1 + 2*magE*q0 - 2*magN*q3;
SH_MAG(4) = q3^2;
SH_MAG(5) = q2^2;
SH_MAG(6) = q1^2;
SH_MAG(7) = q0^2;
SH_MAG(8) = 2*magN*q0;
SH_MAG(9) = 2*magE*q3;
SH_MAG(10) = 2*q2*q3;
SH_MAG(11) = 2*q1*q3;
SH_MAG(12) = 2*q1*q2;
SH_MAG(13) = 2*q0*q1;
SH_MAG(14) = 2*magD*q2;
SH_MAG(15) = SH_MAG(8) + SH_MAG(9) - SH_MAG(14);
SH_MAG(16) = 2*q0*q3;
H_MAG = zeros(1,22);
H_MAG(1) = SH_MAG(15);
H_MAG(2) = SH_MAG(1);
H_MAG(3) = -SH_MAG(2);
H_MAG(4) = SH_MAG(3);
H_MAG(17) = SH_MAG(6) - SH_MAG(5) - SH_MAG(4) + SH_MAG(7);
H_MAG(18) = SH_MAG(12) + SH_MAG(16);
H_MAG(19) = SH_MAG(11) - 2*q0*q2;
H_MAG(20) = 1;
SK_MX = zeros(4,1);
SK_MX(1) = 1/(OP(20,20) + R_MAG + OP(1,20)*SH_MAG(15) + OP(2,20)*SH_MAG(1) - OP(3,20)*SH_MAG(2) + OP(4,20)*SH_MAG(3) - OP(17,20)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + (SH_MAG(11) - 2*q0*q2)*(OP(20,19) + OP(1,19)*SH_MAG(15) + OP(2,19)*SH_MAG(1) - OP(3,19)*SH_MAG(2) + OP(4,19)*SH_MAG(3) - OP(17,19)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,19)*(SH_MAG(11) - 2*q0*q2) + OP(18,19)*(SH_MAG(12) + SH_MAG(16))) + (SH_MAG(12) + SH_MAG(16))*(OP(20,18) + OP(1,18)*SH_MAG(15) + OP(2,18)*SH_MAG(1) - OP(3,18)*SH_MAG(2) + OP(4,18)*SH_MAG(3) - OP(17,18)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,18)*(SH_MAG(11) - 2*q0*q2) + OP(18,18)*(SH_MAG(12) + SH_MAG(16))) + OP(19,20)*(SH_MAG(11) - 2*q0*q2) + OP(18,20)*(SH_MAG(12) + SH_MAG(16)) + SH_MAG(1)*(OP(20,2) + OP(2,2)*SH_MAG(1) + OP(1,2)*SH_MAG(15) - OP(3,2)*SH_MAG(2) + OP(4,2)*SH_MAG(3) - OP(17,2)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,2)*(SH_MAG(11) - 2*q0*q2) + OP(18,2)*(SH_MAG(12) + SH_MAG(16))) + SH_MAG(15)*(OP(20,1) + OP(2,1)*SH_MAG(1) + OP(1,1)*SH_MAG(15) - OP(3,1)*SH_MAG(2) + OP(4,1)*SH_MAG(3) - OP(17,1)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,1)*(SH_MAG(11) - 2*q0*q2) + OP(18,1)*(SH_MAG(12) + SH_MAG(16))) - SH_MAG(2)*(OP(20,3) + OP(2,3)*SH_MAG(1) + OP(1,3)*SH_MAG(15) - OP(3,3)*SH_MAG(2) + OP(4,3)*SH_MAG(3) - OP(17,3)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,3)*(SH_MAG(11) - 2*q0*q2) + OP(18,3)*(SH_MAG(12) + SH_MAG(16))) + SH_MAG(3)*(OP(20,4) + OP(2,4)*SH_MAG(1) + OP(1,4)*SH_MAG(15) - OP(3,4)*SH_MAG(2) + OP(4,4)*SH_MAG(3) - OP(17,4)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,4)*(SH_MAG(11) - 2*q0*q2) + OP(18,4)*(SH_MAG(12) + SH_MAG(16))) - (SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7))*(OP(20,17) + OP(1,17)*SH_MAG(15) + OP(2,17)*SH_MAG(1) - OP(3,17)*SH_MAG(2) + OP(4,17)*SH_MAG(3) - OP(17,17)*(SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7)) + OP(19,17)*(SH_MAG(11) - 2*q0*q2) + OP(18,17)*(SH_MAG(12) + SH_MAG(16))));
SK_MX(2) = SH_MAG(4) + SH_MAG(5) - SH_MAG(6) - SH_MAG(7);
SK_MX(3) = SH_MAG(11) - 2*q0*q2;
SK_MX(4) = SH_MAG(12) + SH_MAG(16);
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_MX(1)*(OP(1,20) + OP(1,2)*SH_MAG(1) - OP(1,3)*SH_MAG(2) + OP(1,4)*SH_MAG(3) + OP(1,1)*SH_MAG(15) - OP(1,17)*SK_MX(2) + OP(1,18)*SK_MX(4) + OP(1,19)*SK_MX(3));
Kfusion(2) = SK_MX(1)*(OP(2,20) + OP(2,2)*SH_MAG(1) - OP(2,3)*SH_MAG(2) + OP(2,4)*SH_MAG(3) + OP(2,1)*SH_MAG(15) - OP(2,17)*SK_MX(2) + OP(2,18)*SK_MX(4) + OP(2,19)*SK_MX(3));
Kfusion(3) = SK_MX(1)*(OP(3,20) + OP(3,2)*SH_MAG(1) - OP(3,3)*SH_MAG(2) + OP(3,4)*SH_MAG(3) + OP(3,1)*SH_MAG(15) - OP(3,17)*SK_MX(2) + OP(3,18)*SK_MX(4) + OP(3,19)*SK_MX(3));
Kfusion(4) = SK_MX(1)*(OP(4,20) + OP(4,2)*SH_MAG(1) - OP(4,3)*SH_MAG(2) + OP(4,4)*SH_MAG(3) + OP(4,1)*SH_MAG(15) - OP(4,17)*SK_MX(2) + OP(4,18)*SK_MX(4) + OP(4,19)*SK_MX(3));
Kfusion(5) = SK_MX(1)*(OP(5,20) + OP(5,2)*SH_MAG(1) - OP(5,3)*SH_MAG(2) + OP(5,4)*SH_MAG(3) + OP(5,1)*SH_MAG(15) - OP(5,17)*SK_MX(2) + OP(5,18)*SK_MX(4) + OP(5,19)*SK_MX(3));
Kfusion(6) = SK_MX(1)*(OP(6,20) + OP(6,2)*SH_MAG(1) - OP(6,3)*SH_MAG(2) + OP(6,4)*SH_MAG(3) + OP(6,1)*SH_MAG(15) - OP(6,17)*SK_MX(2) + OP(6,18)*SK_MX(4) + OP(6,19)*SK_MX(3));
Kfusion(7) = SK_MX(1)*(OP(7,20) + OP(7,2)*SH_MAG(1) - OP(7,3)*SH_MAG(2) + OP(7,4)*SH_MAG(3) + OP(7,1)*SH_MAG(15) - OP(7,17)*SK_MX(2) + OP(7,18)*SK_MX(4) + OP(7,19)*SK_MX(3));
Kfusion(8) = SK_MX(1)*(OP(8,20) + OP(8,2)*SH_MAG(1) - OP(8,3)*SH_MAG(2) + OP(8,4)*SH_MAG(3) + OP(8,1)*SH_MAG(15) - OP(8,17)*SK_MX(2) + OP(8,18)*SK_MX(4) + OP(8,19)*SK_MX(3));
Kfusion(9) = SK_MX(1)*(OP(9,20) + OP(9,2)*SH_MAG(1) - OP(9,3)*SH_MAG(2) + OP(9,4)*SH_MAG(3) + OP(9,1)*SH_MAG(15) - OP(9,17)*SK_MX(2) + OP(9,18)*SK_MX(4) + OP(9,19)*SK_MX(3));
Kfusion(10) = SK_MX(1)*(OP(10,20) + OP(10,2)*SH_MAG(1) - OP(10,3)*SH_MAG(2) + OP(10,4)*SH_MAG(3) + OP(10,1)*SH_MAG(15) - OP(10,17)*SK_MX(2) + OP(10,18)*SK_MX(4) + OP(10,19)*SK_MX(3));
Kfusion(11) = SK_MX(1)*(OP(11,20) + OP(11,2)*SH_MAG(1) - OP(11,3)*SH_MAG(2) + OP(11,4)*SH_MAG(3) + OP(11,1)*SH_MAG(15) - OP(11,17)*SK_MX(2) + OP(11,18)*SK_MX(4) + OP(11,19)*SK_MX(3));
Kfusion(12) = SK_MX(1)*(OP(12,20) + OP(12,2)*SH_MAG(1) - OP(12,3)*SH_MAG(2) + OP(12,4)*SH_MAG(3) + OP(12,1)*SH_MAG(15) - OP(12,17)*SK_MX(2) + OP(12,18)*SK_MX(4) + OP(12,19)*SK_MX(3));
Kfusion(13) = SK_MX(1)*(OP(13,20) + OP(13,2)*SH_MAG(1) - OP(13,3)*SH_MAG(2) + OP(13,4)*SH_MAG(3) + OP(13,1)*SH_MAG(15) - OP(13,17)*SK_MX(2) + OP(13,18)*SK_MX(4) + OP(13,19)*SK_MX(3));
Kfusion(14) = SK_MX(1)*(OP(14,20) + OP(14,2)*SH_MAG(1) - OP(14,3)*SH_MAG(2) + OP(14,4)*SH_MAG(3) + OP(14,1)*SH_MAG(15) - OP(14,17)*SK_MX(2) + OP(14,18)*SK_MX(4) + OP(14,19)*SK_MX(3));
Kfusion(15) = SK_MX(1)*(OP(15,20) + OP(15,2)*SH_MAG(1) - OP(15,3)*SH_MAG(2) + OP(15,4)*SH_MAG(3) + OP(15,1)*SH_MAG(15) - OP(15,17)*SK_MX(2) + OP(15,18)*SK_MX(4) + OP(15,19)*SK_MX(3));
Kfusion(16) = SK_MX(1)*(OP(16,20) + OP(16,2)*SH_MAG(1) - OP(16,3)*SH_MAG(2) + OP(16,4)*SH_MAG(3) + OP(16,1)*SH_MAG(15) - OP(16,17)*SK_MX(2) + OP(16,18)*SK_MX(4) + OP(16,19)*SK_MX(3));
Kfusion(17) = SK_MX(1)*(OP(17,20) + OP(17,2)*SH_MAG(1) - OP(17,3)*SH_MAG(2) + OP(17,4)*SH_MAG(3) + OP(17,1)*SH_MAG(15) - OP(17,17)*SK_MX(2) + OP(17,18)*SK_MX(4) + OP(17,19)*SK_MX(3));
Kfusion(18) = SK_MX(1)*(OP(18,20) + OP(18,2)*SH_MAG(1) - OP(18,3)*SH_MAG(2) + OP(18,4)*SH_MAG(3) + OP(18,1)*SH_MAG(15) - OP(18,17)*SK_MX(2) + OP(18,18)*SK_MX(4) + OP(18,19)*SK_MX(3));
Kfusion(19) = SK_MX(1)*(OP(19,20) + OP(19,2)*SH_MAG(1) - OP(19,3)*SH_MAG(2) + OP(19,4)*SH_MAG(3) + OP(19,1)*SH_MAG(15) - OP(19,17)*SK_MX(2) + OP(19,18)*SK_MX(4) + OP(19,19)*SK_MX(3));
Kfusion(20) = SK_MX(1)*(OP(20,20) + OP(20,2)*SH_MAG(1) - OP(20,3)*SH_MAG(2) + OP(20,4)*SH_MAG(3) + OP(20,1)*SH_MAG(15) - OP(20,17)*SK_MX(2) + OP(20,18)*SK_MX(4) + OP(20,19)*SK_MX(3));
Kfusion(21) = SK_MX(1)*(OP(21,20) + OP(21,2)*SH_MAG(1) - OP(21,3)*SH_MAG(2) + OP(21,4)*SH_MAG(3) + OP(21,1)*SH_MAG(15) - OP(21,17)*SK_MX(2) + OP(21,18)*SK_MX(4) + OP(21,19)*SK_MX(3));
Kfusion(22) = SK_MX(1)*(OP(22,20) + OP(22,2)*SH_MAG(1) - OP(22,3)*SH_MAG(2) + OP(22,4)*SH_MAG(3) + OP(22,1)*SH_MAG(15) - OP(22,17)*SK_MX(2) + OP(22,18)*SK_MX(4) + OP(22,19)*SK_MX(3));
H_MAG = zeros(1,22);
H_MAG(1) = SH_MAG(3);
H_MAG(2) = SH_MAG(2);
H_MAG(3) = SH_MAG(1);
H_MAG(4) = -SH_MAG(15);
H_MAG(17) = SH_MAG(12) - SH_MAG(16);
H_MAG(18) = SH_MAG(5) - SH_MAG(4) - SH_MAG(6) + SH_MAG(7);
H_MAG(19) = SH_MAG(10) + SH_MAG(13);
H_MAG(21) = 1;
SK_MY = zeros(4,1);
SK_MY(1) = 1/(OP(21,21) + R_MAG + OP(1,21)*SH_MAG(3) + OP(2,21)*SH_MAG(2) + OP(3,21)*SH_MAG(1) - OP(4,21)*SH_MAG(15) + OP(17,21)*(SH_MAG(12) - SH_MAG(16)) - OP(18,21)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + SH_MAG(3)*(OP(21,1) + OP(1,1)*SH_MAG(3) + OP(2,1)*SH_MAG(2) + OP(3,1)*SH_MAG(1) - OP(4,1)*SH_MAG(15) + OP(17,1)*(SH_MAG(12) - SH_MAG(16)) - OP(18,1)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,1)*(SH_MAG(10) + SH_MAG(13))) + SH_MAG(2)*(OP(21,2) + OP(1,2)*SH_MAG(3) + OP(2,2)*SH_MAG(2) + OP(3,2)*SH_MAG(1) - OP(4,2)*SH_MAG(15) + OP(17,2)*(SH_MAG(12) - SH_MAG(16)) - OP(18,2)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,2)*(SH_MAG(10) + SH_MAG(13))) + SH_MAG(1)*(OP(21,3) + OP(1,3)*SH_MAG(3) + OP(2,3)*SH_MAG(2) + OP(3,3)*SH_MAG(1) - OP(4,3)*SH_MAG(15) + OP(17,3)*(SH_MAG(12) - SH_MAG(16)) - OP(18,3)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,3)*(SH_MAG(10) + SH_MAG(13))) - SH_MAG(15)*(OP(21,4) + OP(1,4)*SH_MAG(3) + OP(2,4)*SH_MAG(2) + OP(3,4)*SH_MAG(1) - OP(4,4)*SH_MAG(15) + OP(17,4)*(SH_MAG(12) - SH_MAG(16)) - OP(18,4)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,4)*(SH_MAG(10) + SH_MAG(13))) + (SH_MAG(12) - SH_MAG(16))*(OP(21,17) + OP(1,17)*SH_MAG(3) + OP(2,17)*SH_MAG(2) + OP(3,17)*SH_MAG(1) - OP(4,17)*SH_MAG(15) + OP(17,17)*(SH_MAG(12) - SH_MAG(16)) - OP(18,17)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,17)*(SH_MAG(10) + SH_MAG(13))) - (SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7))*(OP(21,18) + OP(1,18)*SH_MAG(3) + OP(2,18)*SH_MAG(2) + OP(3,18)*SH_MAG(1) - OP(4,18)*SH_MAG(15) + OP(17,18)*(SH_MAG(12) - SH_MAG(16)) - OP(18,18)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,18)*(SH_MAG(10) + SH_MAG(13))) + OP(19,21)*(SH_MAG(10) + SH_MAG(13)) + (SH_MAG(10) + SH_MAG(13))*(OP(21,19) + OP(1,19)*SH_MAG(3) + OP(2,19)*SH_MAG(2) + OP(3,19)*SH_MAG(1) - OP(4,19)*SH_MAG(15) + OP(17,19)*(SH_MAG(12) - SH_MAG(16)) - OP(18,19)*(SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7)) + OP(19,19)*(SH_MAG(10) + SH_MAG(13))));
SK_MY(2) = SH_MAG(4) - SH_MAG(5) + SH_MAG(6) - SH_MAG(7);
SK_MY(3) = SH_MAG(12) - SH_MAG(16);
SK_MY(4) = SH_MAG(10) + SH_MAG(13);
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_MY(1)*(OP(1,21) + OP(1,1)*SH_MAG(3) + OP(1,2)*SH_MAG(2) + OP(1,3)*SH_MAG(1) - OP(1,4)*SH_MAG(15) + OP(1,17)*SK_MY(3) - OP(1,18)*SK_MY(2) + OP(1,19)*SK_MY(4));
Kfusion(2) = SK_MY(1)*(OP(2,21) + OP(2,1)*SH_MAG(3) + OP(2,2)*SH_MAG(2) + OP(2,3)*SH_MAG(1) - OP(2,4)*SH_MAG(15) + OP(2,17)*SK_MY(3) - OP(2,18)*SK_MY(2) + OP(2,19)*SK_MY(4));
Kfusion(3) = SK_MY(1)*(OP(3,21) + OP(3,1)*SH_MAG(3) + OP(3,2)*SH_MAG(2) + OP(3,3)*SH_MAG(1) - OP(3,4)*SH_MAG(15) + OP(3,17)*SK_MY(3) - OP(3,18)*SK_MY(2) + OP(3,19)*SK_MY(4));
Kfusion(4) = SK_MY(1)*(OP(4,21) + OP(4,1)*SH_MAG(3) + OP(4,2)*SH_MAG(2) + OP(4,3)*SH_MAG(1) - OP(4,4)*SH_MAG(15) + OP(4,17)*SK_MY(3) - OP(4,18)*SK_MY(2) + OP(4,19)*SK_MY(4));
Kfusion(5) = SK_MY(1)*(OP(5,21) + OP(5,1)*SH_MAG(3) + OP(5,2)*SH_MAG(2) + OP(5,3)*SH_MAG(1) - OP(5,4)*SH_MAG(15) + OP(5,17)*SK_MY(3) - OP(5,18)*SK_MY(2) + OP(5,19)*SK_MY(4));
Kfusion(6) = SK_MY(1)*(OP(6,21) + OP(6,1)*SH_MAG(3) + OP(6,2)*SH_MAG(2) + OP(6,3)*SH_MAG(1) - OP(6,4)*SH_MAG(15) + OP(6,17)*SK_MY(3) - OP(6,18)*SK_MY(2) + OP(6,19)*SK_MY(4));
Kfusion(7) = SK_MY(1)*(OP(7,21) + OP(7,1)*SH_MAG(3) + OP(7,2)*SH_MAG(2) + OP(7,3)*SH_MAG(1) - OP(7,4)*SH_MAG(15) + OP(7,17)*SK_MY(3) - OP(7,18)*SK_MY(2) + OP(7,19)*SK_MY(4));
Kfusion(8) = SK_MY(1)*(OP(8,21) + OP(8,1)*SH_MAG(3) + OP(8,2)*SH_MAG(2) + OP(8,3)*SH_MAG(1) - OP(8,4)*SH_MAG(15) + OP(8,17)*SK_MY(3) - OP(8,18)*SK_MY(2) + OP(8,19)*SK_MY(4));
Kfusion(9) = SK_MY(1)*(OP(9,21) + OP(9,1)*SH_MAG(3) + OP(9,2)*SH_MAG(2) + OP(9,3)*SH_MAG(1) - OP(9,4)*SH_MAG(15) + OP(9,17)*SK_MY(3) - OP(9,18)*SK_MY(2) + OP(9,19)*SK_MY(4));
Kfusion(10) = SK_MY(1)*(OP(10,21) + OP(10,1)*SH_MAG(3) + OP(10,2)*SH_MAG(2) + OP(10,3)*SH_MAG(1) - OP(10,4)*SH_MAG(15) + OP(10,17)*SK_MY(3) - OP(10,18)*SK_MY(2) + OP(10,19)*SK_MY(4));
Kfusion(11) = SK_MY(1)*(OP(11,21) + OP(11,1)*SH_MAG(3) + OP(11,2)*SH_MAG(2) + OP(11,3)*SH_MAG(1) - OP(11,4)*SH_MAG(15) + OP(11,17)*SK_MY(3) - OP(11,18)*SK_MY(2) + OP(11,19)*SK_MY(4));
Kfusion(12) = SK_MY(1)*(OP(12,21) + OP(12,1)*SH_MAG(3) + OP(12,2)*SH_MAG(2) + OP(12,3)*SH_MAG(1) - OP(12,4)*SH_MAG(15) + OP(12,17)*SK_MY(3) - OP(12,18)*SK_MY(2) + OP(12,19)*SK_MY(4));
Kfusion(13) = SK_MY(1)*(OP(13,21) + OP(13,1)*SH_MAG(3) + OP(13,2)*SH_MAG(2) + OP(13,3)*SH_MAG(1) - OP(13,4)*SH_MAG(15) + OP(13,17)*SK_MY(3) - OP(13,18)*SK_MY(2) + OP(13,19)*SK_MY(4));
Kfusion(14) = SK_MY(1)*(OP(14,21) + OP(14,1)*SH_MAG(3) + OP(14,2)*SH_MAG(2) + OP(14,3)*SH_MAG(1) - OP(14,4)*SH_MAG(15) + OP(14,17)*SK_MY(3) - OP(14,18)*SK_MY(2) + OP(14,19)*SK_MY(4));
Kfusion(15) = SK_MY(1)*(OP(15,21) + OP(15,1)*SH_MAG(3) + OP(15,2)*SH_MAG(2) + OP(15,3)*SH_MAG(1) - OP(15,4)*SH_MAG(15) + OP(15,17)*SK_MY(3) - OP(15,18)*SK_MY(2) + OP(15,19)*SK_MY(4));
Kfusion(16) = SK_MY(1)*(OP(16,21) + OP(16,1)*SH_MAG(3) + OP(16,2)*SH_MAG(2) + OP(16,3)*SH_MAG(1) - OP(16,4)*SH_MAG(15) + OP(16,17)*SK_MY(3) - OP(16,18)*SK_MY(2) + OP(16,19)*SK_MY(4));
Kfusion(17) = SK_MY(1)*(OP(17,21) + OP(17,1)*SH_MAG(3) + OP(17,2)*SH_MAG(2) + OP(17,3)*SH_MAG(1) - OP(17,4)*SH_MAG(15) + OP(17,17)*SK_MY(3) - OP(17,18)*SK_MY(2) + OP(17,19)*SK_MY(4));
Kfusion(18) = SK_MY(1)*(OP(18,21) + OP(18,1)*SH_MAG(3) + OP(18,2)*SH_MAG(2) + OP(18,3)*SH_MAG(1) - OP(18,4)*SH_MAG(15) + OP(18,17)*SK_MY(3) - OP(18,18)*SK_MY(2) + OP(18,19)*SK_MY(4));
Kfusion(19) = SK_MY(1)*(OP(19,21) + OP(19,1)*SH_MAG(3) + OP(19,2)*SH_MAG(2) + OP(19,3)*SH_MAG(1) - OP(19,4)*SH_MAG(15) + OP(19,17)*SK_MY(3) - OP(19,18)*SK_MY(2) + OP(19,19)*SK_MY(4));
Kfusion(20) = SK_MY(1)*(OP(20,21) + OP(20,1)*SH_MAG(3) + OP(20,2)*SH_MAG(2) + OP(20,3)*SH_MAG(1) - OP(20,4)*SH_MAG(15) + OP(20,17)*SK_MY(3) - OP(20,18)*SK_MY(2) + OP(20,19)*SK_MY(4));
Kfusion(21) = SK_MY(1)*(OP(21,21) + OP(21,1)*SH_MAG(3) + OP(21,2)*SH_MAG(2) + OP(21,3)*SH_MAG(1) - OP(21,4)*SH_MAG(15) + OP(21,17)*SK_MY(3) - OP(21,18)*SK_MY(2) + OP(21,19)*SK_MY(4));
Kfusion(22) = SK_MY(1)*(OP(22,21) + OP(22,1)*SH_MAG(3) + OP(22,2)*SH_MAG(2) + OP(22,3)*SH_MAG(1) - OP(22,4)*SH_MAG(15) + OP(22,17)*SK_MY(3) - OP(22,18)*SK_MY(2) + OP(22,19)*SK_MY(4));
H_MAG = zeros(1,22);
H_MAG(1) = SH_MAG(2);
H_MAG(2) = -SH_MAG(3);
H_MAG(3) = SH_MAG(15);
H_MAG(4) = SH_MAG(1);
H_MAG(17) = SH_MAG(11) + 2*q0*q2;
H_MAG(18) = SH_MAG(10) - SH_MAG(13);
H_MAG(19) = SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7);
H_MAG(22) = 1;
SK_MZ = zeros(4,1);
SK_MZ(1) = 1/(OP(22,22) + R_MAG + OP(1,22)*SH_MAG(2) - OP(2,22)*SH_MAG(3) + OP(3,22)*SH_MAG(15) + OP(4,22)*SH_MAG(1) + OP(18,22)*(SH_MAG(10) - SH_MAG(13)) + OP(19,22)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + SH_MAG(2)*(OP(22,1) + OP(1,1)*SH_MAG(2) - OP(2,1)*SH_MAG(3) + OP(4,1)*SH_MAG(1) + OP(3,1)*SH_MAG(15) + OP(18,1)*(SH_MAG(10) - SH_MAG(13)) + OP(19,1)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,1)*(SH_MAG(11) + 2*q0*q2)) - SH_MAG(3)*(OP(22,2) + OP(1,2)*SH_MAG(2) - OP(2,2)*SH_MAG(3) + OP(4,2)*SH_MAG(1) + OP(3,2)*SH_MAG(15) + OP(18,2)*(SH_MAG(10) - SH_MAG(13)) + OP(19,2)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,2)*(SH_MAG(11) + 2*q0*q2)) + SH_MAG(1)*(OP(22,4) + OP(1,4)*SH_MAG(2) - OP(2,4)*SH_MAG(3) + OP(4,4)*SH_MAG(1) + OP(3,4)*SH_MAG(15) + OP(18,4)*(SH_MAG(10) - SH_MAG(13)) + OP(19,4)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,4)*(SH_MAG(11) + 2*q0*q2)) + SH_MAG(15)*(OP(22,3) + OP(1,3)*SH_MAG(2) - OP(2,3)*SH_MAG(3) + OP(4,3)*SH_MAG(1) + OP(3,3)*SH_MAG(15) + OP(18,3)*(SH_MAG(10) - SH_MAG(13)) + OP(19,3)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,3)*(SH_MAG(11) + 2*q0*q2)) + (SH_MAG(10) - SH_MAG(13))*(OP(22,18) + OP(1,18)*SH_MAG(2) - OP(2,18)*SH_MAG(3) + OP(3,18)*SH_MAG(15) + OP(4,18)*SH_MAG(1) + OP(18,18)*(SH_MAG(10) - SH_MAG(13)) + OP(19,18)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,18)*(SH_MAG(11) + 2*q0*q2)) + (SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7))*(OP(22,19) + OP(1,19)*SH_MAG(2) - OP(2,19)*SH_MAG(3) + OP(3,19)*SH_MAG(15) + OP(4,19)*SH_MAG(1) + OP(18,19)*(SH_MAG(10) - SH_MAG(13)) + OP(19,19)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,19)*(SH_MAG(11) + 2*q0*q2)) + OP(17,22)*(SH_MAG(11) + 2*q0*q2) + (SH_MAG(11) + 2*q0*q2)*(OP(22,17) + OP(1,17)*SH_MAG(2) - OP(2,17)*SH_MAG(3) + OP(3,17)*SH_MAG(15) + OP(4,17)*SH_MAG(1) + OP(18,17)*(SH_MAG(10) - SH_MAG(13)) + OP(19,17)*(SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7)) + OP(17,17)*(SH_MAG(11) + 2*q0*q2)));
SK_MZ(2) = SH_MAG(4) - SH_MAG(5) - SH_MAG(6) + SH_MAG(7);
SK_MZ(3) = SH_MAG(11) + 2*q0*q2;
SK_MZ(4) = SH_MAG(10) - SH_MAG(13);
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_MZ(1)*(OP(1,22) + OP(1,1)*SH_MAG(2) - OP(1,2)*SH_MAG(3) + OP(1,4)*SH_MAG(1) + OP(1,3)*SH_MAG(15) + OP(1,17)*SK_MZ(3) + OP(1,19)*SK_MZ(2) + OP(1,18)*SK_MZ(4));
Kfusion(2) = SK_MZ(1)*(OP(2,22) + OP(2,1)*SH_MAG(2) - OP(2,2)*SH_MAG(3) + OP(2,4)*SH_MAG(1) + OP(2,3)*SH_MAG(15) + OP(2,17)*SK_MZ(3) + OP(2,19)*SK_MZ(2) + OP(2,18)*SK_MZ(4));
Kfusion(3) = SK_MZ(1)*(OP(3,22) + OP(3,1)*SH_MAG(2) - OP(3,2)*SH_MAG(3) + OP(3,4)*SH_MAG(1) + OP(3,3)*SH_MAG(15) + OP(3,17)*SK_MZ(3) + OP(3,19)*SK_MZ(2) + OP(3,18)*SK_MZ(4));
Kfusion(4) = SK_MZ(1)*(OP(4,22) + OP(4,1)*SH_MAG(2) - OP(4,2)*SH_MAG(3) + OP(4,4)*SH_MAG(1) + OP(4,3)*SH_MAG(15) + OP(4,17)*SK_MZ(3) + OP(4,19)*SK_MZ(2) + OP(4,18)*SK_MZ(4));
Kfusion(5) = SK_MZ(1)*(OP(5,22) + OP(5,1)*SH_MAG(2) - OP(5,2)*SH_MAG(3) + OP(5,4)*SH_MAG(1) + OP(5,3)*SH_MAG(15) + OP(5,17)*SK_MZ(3) + OP(5,19)*SK_MZ(2) + OP(5,18)*SK_MZ(4));
Kfusion(6) = SK_MZ(1)*(OP(6,22) + OP(6,1)*SH_MAG(2) - OP(6,2)*SH_MAG(3) + OP(6,4)*SH_MAG(1) + OP(6,3)*SH_MAG(15) + OP(6,17)*SK_MZ(3) + OP(6,19)*SK_MZ(2) + OP(6,18)*SK_MZ(4));
Kfusion(7) = SK_MZ(1)*(OP(7,22) + OP(7,1)*SH_MAG(2) - OP(7,2)*SH_MAG(3) + OP(7,4)*SH_MAG(1) + OP(7,3)*SH_MAG(15) + OP(7,17)*SK_MZ(3) + OP(7,19)*SK_MZ(2) + OP(7,18)*SK_MZ(4));
Kfusion(8) = SK_MZ(1)*(OP(8,22) + OP(8,1)*SH_MAG(2) - OP(8,2)*SH_MAG(3) + OP(8,4)*SH_MAG(1) + OP(8,3)*SH_MAG(15) + OP(8,17)*SK_MZ(3) + OP(8,19)*SK_MZ(2) + OP(8,18)*SK_MZ(4));
Kfusion(9) = SK_MZ(1)*(OP(9,22) + OP(9,1)*SH_MAG(2) - OP(9,2)*SH_MAG(3) + OP(9,4)*SH_MAG(1) + OP(9,3)*SH_MAG(15) + OP(9,17)*SK_MZ(3) + OP(9,19)*SK_MZ(2) + OP(9,18)*SK_MZ(4));
Kfusion(10) = SK_MZ(1)*(OP(10,22) + OP(10,1)*SH_MAG(2) - OP(10,2)*SH_MAG(3) + OP(10,4)*SH_MAG(1) + OP(10,3)*SH_MAG(15) + OP(10,17)*SK_MZ(3) + OP(10,19)*SK_MZ(2) + OP(10,18)*SK_MZ(4));
Kfusion(11) = SK_MZ(1)*(OP(11,22) + OP(11,1)*SH_MAG(2) - OP(11,2)*SH_MAG(3) + OP(11,4)*SH_MAG(1) + OP(11,3)*SH_MAG(15) + OP(11,17)*SK_MZ(3) + OP(11,19)*SK_MZ(2) + OP(11,18)*SK_MZ(4));
Kfusion(12) = SK_MZ(1)*(OP(12,22) + OP(12,1)*SH_MAG(2) - OP(12,2)*SH_MAG(3) + OP(12,4)*SH_MAG(1) + OP(12,3)*SH_MAG(15) + OP(12,17)*SK_MZ(3) + OP(12,19)*SK_MZ(2) + OP(12,18)*SK_MZ(4));
Kfusion(13) = SK_MZ(1)*(OP(13,22) + OP(13,1)*SH_MAG(2) - OP(13,2)*SH_MAG(3) + OP(13,4)*SH_MAG(1) + OP(13,3)*SH_MAG(15) + OP(13,17)*SK_MZ(3) + OP(13,19)*SK_MZ(2) + OP(13,18)*SK_MZ(4));
Kfusion(14) = SK_MZ(1)*(OP(14,22) + OP(14,1)*SH_MAG(2) - OP(14,2)*SH_MAG(3) + OP(14,4)*SH_MAG(1) + OP(14,3)*SH_MAG(15) + OP(14,17)*SK_MZ(3) + OP(14,19)*SK_MZ(2) + OP(14,18)*SK_MZ(4));
Kfusion(15) = SK_MZ(1)*(OP(15,22) + OP(15,1)*SH_MAG(2) - OP(15,2)*SH_MAG(3) + OP(15,4)*SH_MAG(1) + OP(15,3)*SH_MAG(15) + OP(15,17)*SK_MZ(3) + OP(15,19)*SK_MZ(2) + OP(15,18)*SK_MZ(4));
Kfusion(16) = SK_MZ(1)*(OP(16,22) + OP(16,1)*SH_MAG(2) - OP(16,2)*SH_MAG(3) + OP(16,4)*SH_MAG(1) + OP(16,3)*SH_MAG(15) + OP(16,17)*SK_MZ(3) + OP(16,19)*SK_MZ(2) + OP(16,18)*SK_MZ(4));
Kfusion(17) = SK_MZ(1)*(OP(17,22) + OP(17,1)*SH_MAG(2) - OP(17,2)*SH_MAG(3) + OP(17,4)*SH_MAG(1) + OP(17,3)*SH_MAG(15) + OP(17,17)*SK_MZ(3) + OP(17,19)*SK_MZ(2) + OP(17,18)*SK_MZ(4));
Kfusion(18) = SK_MZ(1)*(OP(18,22) + OP(18,1)*SH_MAG(2) - OP(18,2)*SH_MAG(3) + OP(18,4)*SH_MAG(1) + OP(18,3)*SH_MAG(15) + OP(18,17)*SK_MZ(3) + OP(18,19)*SK_MZ(2) + OP(18,18)*SK_MZ(4));
Kfusion(19) = SK_MZ(1)*(OP(19,22) + OP(19,1)*SH_MAG(2) - OP(19,2)*SH_MAG(3) + OP(19,4)*SH_MAG(1) + OP(19,3)*SH_MAG(15) + OP(19,17)*SK_MZ(3) + OP(19,19)*SK_MZ(2) + OP(19,18)*SK_MZ(4));
Kfusion(20) = SK_MZ(1)*(OP(20,22) + OP(20,1)*SH_MAG(2) - OP(20,2)*SH_MAG(3) + OP(20,4)*SH_MAG(1) + OP(20,3)*SH_MAG(15) + OP(20,17)*SK_MZ(3) + OP(20,19)*SK_MZ(2) + OP(20,18)*SK_MZ(4));
Kfusion(21) = SK_MZ(1)*(OP(21,22) + OP(21,1)*SH_MAG(2) - OP(21,2)*SH_MAG(3) + OP(21,4)*SH_MAG(1) + OP(21,3)*SH_MAG(15) + OP(21,17)*SK_MZ(3) + OP(21,19)*SK_MZ(2) + OP(21,18)*SK_MZ(4));
Kfusion(22) = SK_MZ(1)*(OP(22,22) + OP(22,1)*SH_MAG(2) - OP(22,2)*SH_MAG(3) + OP(22,4)*SH_MAG(1) + OP(22,3)*SH_MAG(15) + OP(22,17)*SK_MZ(3) + OP(22,19)*SK_MZ(2) + OP(22,18)*SK_MZ(4));
SH_LOS = zeros(14,1);
SH_LOS(1) = q0^2 - q1^2 - q2^2 + q3^2;
SH_LOS(2) = vn*(q0^2 + q1^2 - q2^2 - q3^2) - vd*(2*q0*q2 - 2*q1*q3) + ve*(2*q0*q3 + 2*q1*q2);
SH_LOS(3) = ve*(q0^2 - q1^2 + q2^2 - q3^2) + vd*(2*q0*q1 + 2*q2*q3) - vn*(2*q0*q3 - 2*q1*q2);
SH_LOS(4) = 1/(pd - ptd);
SH_LOS(5) = SH_LOS(1)*SH_LOS(4)*(2*q3*ve - 2*q2*vd + 2*q0*vn);
SH_LOS(6) = 2*q1*vd + 2*q0*ve - 2*q3*vn;
SH_LOS(7) = 2*q0*vd - 2*q1*ve + 2*q2*vn;
SH_LOS(8) = 2*q3*vd + 2*q2*ve + 2*q1*vn;
SH_LOS(9) = q1^2;
SH_LOS(10) = 2*q0*q3;
SH_LOS(11) = SH_LOS(4)^2;
SH_LOS(12) = q3^2;
SH_LOS(13) = q2^2;
SH_LOS(14) = q0^2;
H_LOS = zeros(1,22);
H_LOS(1) = - SH_LOS(1)*SH_LOS(4)*SH_LOS(6) - 2*SH_LOS(3)*SH_LOS(4)*q0;
H_LOS(2) = 2*SH_LOS(3)*SH_LOS(4)*q1 - SH_LOS(1)*SH_LOS(4)*SH_LOS(7);
H_LOS(3) = 2*SH_LOS(3)*SH_LOS(4)*q2 - SH_LOS(1)*SH_LOS(4)*SH_LOS(8);
H_LOS(4) = SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3;
H_LOS(5) = SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2);
H_LOS(6) = SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14));
H_LOS(7) = -SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3);
H_LOS(10) = SH_LOS(1)*SH_LOS(3)*SH_LOS(11);
H_LOS = zeros(1,22);
H_LOS(1) = SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0;
H_LOS(2) = SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1;
H_LOS(3) = - SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(2)*SH_LOS(4)*q2;
H_LOS(4) = SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3;
H_LOS(5) = SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14));
H_LOS(6) = SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2);
H_LOS(7) = -SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3);
H_LOS(10) = -SH_LOS(1)*SH_LOS(2)*SH_LOS(11);
SK_LOS = zeros(16,1);
SK_LOS(1) = 1/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
SK_LOS(2) = 1/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
SK_LOS(3) = SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14);
SK_LOS(4) = SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1;
SK_LOS(5) = SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14);
SK_LOS(6) = 2*q0*q2 - 2*q1*q3;
SK_LOS(7) = SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3;
SK_LOS(8) = SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2;
SK_LOS(9) = 2*q0*q1 + 2*q2*q3;
SK_LOS(10) = SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2;
SK_LOS(11) = SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1;
SK_LOS(12) = SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0;
SK_LOS(13) = SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3;
SK_LOS(14) = SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0;
SK_LOS(15) = SH_LOS(10) - 2*q1*q2;
SK_LOS(16) = SH_LOS(10) + 2*q1*q2;
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = (OP(1,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(1,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(1,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(1,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(1,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(2) = (OP(2,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(2,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(2,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(2,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(2,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(3) = (OP(3,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(3,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(3,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(3,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(3,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(4) = (OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(4,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(4,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(4,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(4,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(5) = (OP(5,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(5,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(5,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(5,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(5,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(5,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(6) = (OP(6,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(6,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(6,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(6,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(6,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(6,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(7) = (OP(7,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(7,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(7,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(7,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(7,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(7,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(7,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(8) = (OP(8,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(8,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(8,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(8,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(8,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(8,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(8,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(8,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(9) = (OP(9,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(9,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(9,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(9,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(9,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(9,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(9,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(9,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(10) = (OP(10,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(10,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(10,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(10,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(10,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(10,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(11) = (OP(11,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(11,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(11,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(11,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(11,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(11,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(11,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(11,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(12) = (OP(12,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(12,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(12,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(12,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(12,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(12,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(12,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(12,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(13) = (OP(13,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(13,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(13,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(13,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(13,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(13,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(13,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(13,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(14) = (OP(14,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(14,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(14,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(14,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(14,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(14,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(14,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(14,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(15) = (OP(15,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(15,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(15,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(15,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(15,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(15,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(15,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(15,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(16) = (OP(16,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(16,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(16,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(16,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(16,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(16,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(16,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(16,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(17) = (OP(17,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(17,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(17,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(17,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(17,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(17,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(17,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(17,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(18) = (OP(18,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(18,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(18,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(18,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(18,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(18,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(18,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(18,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(19) = (OP(19,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(19,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(19,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(19,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(19,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(19,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(19,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(19,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(20) = (OP(20,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(20,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(20,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(20,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(20,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(20,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(20,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(20,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(21) = (OP(21,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(21,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(21,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(21,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(21,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(21,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(21,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(21,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion(22) = (OP(22,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(22,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(22,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(22,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(22,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(22,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(22,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(22,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14)))/(R_LOS + (SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3)*(OP(4,4)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,4)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0)*(OP(4,1)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,1)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1)*(OP(4,2)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,2)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2)*(OP(4,3)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,3)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(3)*SH_LOS(11)*(OP(4,10)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,10)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))*(OP(4,6)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,6)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3)*(OP(4,7)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,7)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2)*(OP(4,5)*(SH_LOS(5) - 2*SH_LOS(3)*SH_LOS(4)*q3) - OP(1,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(3)*SH_LOS(4)*q0) - OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) - 2*SH_LOS(3)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(3)*SH_LOS(4)*q2) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q1 + 2*q2*q3) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) - 2*q1*q2) + OP(10,5)*SH_LOS(1)*SH_LOS(3)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) + SH_LOS(12) - SH_LOS(13) - SH_LOS(14))));
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = (OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(1,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(1,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(1,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(1,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(1,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(1,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(1,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(2) = (OP(2,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(2,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(2,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(2,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(2,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(3) = (OP(3,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(3,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(3,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(3,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(3,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(4) = (OP(4,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(4,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(4,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(4,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(4,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(5) = (OP(5,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(5,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(5,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(5,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(5,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(5,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(6) = (OP(6,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(6,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(6,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(6,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(6,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(6,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(7) = (OP(7,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(7,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(7,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(7,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(7,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(7,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(7,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(8) = (OP(8,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(8,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(8,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(8,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(8,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(8,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(8,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(8,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(9) = (OP(9,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(9,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(9,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(9,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(9,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(9,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(9,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(9,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(10) = (OP(10,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(10,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(10,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(10,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(10,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(10,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(10,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(11) = (OP(11,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(11,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(11,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(11,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(11,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(11,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(11,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(11,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(12) = (OP(12,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(12,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(12,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(12,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(12,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(12,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(12,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(12,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(13) = (OP(13,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(13,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(13,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(13,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(13,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(13,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(13,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(13,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(14) = (OP(14,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(14,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(14,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(14,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(14,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(14,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(14,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(14,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(15) = (OP(15,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(15,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(15,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(15,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(15,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(15,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(15,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(15,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(16) = (OP(16,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(16,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(16,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(16,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(16,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(16,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(16,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(16,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(17) = (OP(17,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(17,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(17,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(17,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(17,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(17,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(17,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(17,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(18) = (OP(18,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(18,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(18,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(18,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(18,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(18,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(18,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(18,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(19) = (OP(19,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(19,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(19,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(19,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(19,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(19,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(19,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(19,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(20) = (OP(20,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(20,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(20,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(20,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(20,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(20,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(20,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(20,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(21) = (OP(21,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(21,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(21,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(21,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(21,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(21,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(21,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(21,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
Kfusion(22) = (OP(22,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(22,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(22,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(22,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(22,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(22,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(22,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(22,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14)))/(R_LOS + (SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0)*(OP(1,1)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,1)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,1)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,1)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,1)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1)*(OP(1,2)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,2)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,2)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,2)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,2)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - (SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2)*(OP(1,3)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,3)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,3)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,3)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,3)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + (SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3)*(OP(1,4)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,4)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,4)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,4)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,4)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(2)*SH_LOS(11)*(OP(1,10)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,10)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,10)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,10)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,10)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))*(OP(1,5)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,5)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,5)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,5)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,5)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) - SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3)*(OP(1,7)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,7)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,7)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,7)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,7)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))) + SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2)*(OP(1,6)*(SH_LOS(5) + 2*SH_LOS(2)*SH_LOS(4)*q0) + OP(2,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(8) - 2*SH_LOS(2)*SH_LOS(4)*q1) - OP(3,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(7) + 2*SH_LOS(2)*SH_LOS(4)*q2) + OP(4,6)*(SH_LOS(1)*SH_LOS(4)*SH_LOS(6) + 2*SH_LOS(2)*SH_LOS(4)*q3) - OP(7,6)*SH_LOS(1)*SH_LOS(4)*(2*q0*q2 - 2*q1*q3) + OP(6,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(10) + 2*q1*q2) - OP(10,6)*SH_LOS(1)*SH_LOS(2)*SH_LOS(11) + OP(5,6)*SH_LOS(1)*SH_LOS(4)*(SH_LOS(9) - SH_LOS(12) - SH_LOS(13) + SH_LOS(14))));
SH_RNG = zeros(3,1);
SH_RNG(1) = q0^2 - q1^2 - q2^2 + q3^2;
SH_RNG(2) = pd - ptd;
SH_RNG(3) = 1/SH_RNG(1)^2;
H_RNG = zeros(1,22);
H_RNG(1,1) = 2*SH_RNG(2)*SH_RNG(3)*q0;
H_RNG(1,2) = -2*SH_RNG(2)*SH_RNG(3)*q1;
H_RNG(1,3) = -2*SH_RNG(2)*SH_RNG(3)*q2;
H_RNG(1,4) = 2*SH_RNG(2)*SH_RNG(3)*q3;
H_RNG(1,10) = -1/SH_RNG(1);
SK_RNG = zeros(2,1);
SK_RNG(1) = 1/(R_RNG + (OP(10,10)/SH_RNG(1) - 2*OP(1,10)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,10)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,10)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,10)*SH_RNG(2)*SH_RNG(3)*q3)/SH_RNG(1) - 2*SH_RNG(2)*SH_RNG(3)*q0*(OP(10,1)/SH_RNG(1) - 2*OP(1,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,1)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,1)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,1)*SH_RNG(2)*SH_RNG(3)*q3) + 2*SH_RNG(2)*SH_RNG(3)*q1*(OP(10,2)/SH_RNG(1) - 2*OP(1,2)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,2)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,2)*SH_RNG(2)*SH_RNG(3)*q3) + 2*SH_RNG(2)*SH_RNG(3)*q2*(OP(10,3)/SH_RNG(1) - 2*OP(1,3)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,3)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,3)*SH_RNG(2)*SH_RNG(3)*q3) - 2*SH_RNG(2)*SH_RNG(3)*q3*(OP(10,4)/SH_RNG(1) - 2*OP(1,4)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,4)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,4)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,4)*SH_RNG(2)*SH_RNG(3)*q3));
SK_RNG(2) = 1/SH_RNG(1);
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = -SK_RNG(1)*(OP(1,10)*SK_RNG(2) - 2*OP(1,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(1,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(1,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(1,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(2) = -SK_RNG(1)*(OP(2,10)*SK_RNG(2) - 2*OP(2,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(2,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(2,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(2,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(3) = -SK_RNG(1)*(OP(3,10)*SK_RNG(2) - 2*OP(3,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(3,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(3,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(3,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(4) = -SK_RNG(1)*(OP(4,10)*SK_RNG(2) - 2*OP(4,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(4,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(4,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(4,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(5) = -SK_RNG(1)*(OP(5,10)*SK_RNG(2) - 2*OP(5,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(5,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(5,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(5,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(6) = -SK_RNG(1)*(OP(6,10)*SK_RNG(2) - 2*OP(6,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(6,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(6,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(6,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(7) = -SK_RNG(1)*(OP(7,10)*SK_RNG(2) - 2*OP(7,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(7,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(7,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(7,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(8) = -SK_RNG(1)*(OP(8,10)*SK_RNG(2) - 2*OP(8,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(8,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(8,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(8,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(9) = -SK_RNG(1)*(OP(9,10)*SK_RNG(2) - 2*OP(9,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(9,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(9,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(9,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(10) = -SK_RNG(1)*(OP(10,10)*SK_RNG(2) - 2*OP(10,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(10,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(10,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(10,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(11) = -SK_RNG(1)*(OP(11,10)*SK_RNG(2) - 2*OP(11,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(11,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(11,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(11,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(12) = -SK_RNG(1)*(OP(12,10)*SK_RNG(2) - 2*OP(12,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(12,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(12,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(12,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(13) = -SK_RNG(1)*(OP(13,10)*SK_RNG(2) - 2*OP(13,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(13,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(13,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(13,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(14) = -SK_RNG(1)*(OP(14,10)*SK_RNG(2) - 2*OP(14,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(14,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(14,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(14,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(15) = -SK_RNG(1)*(OP(15,10)*SK_RNG(2) - 2*OP(15,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(15,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(15,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(15,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(16) = -SK_RNG(1)*(OP(16,10)*SK_RNG(2) - 2*OP(16,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(16,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(16,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(16,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(17) = -SK_RNG(1)*(OP(17,10)*SK_RNG(2) - 2*OP(17,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(17,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(17,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(17,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(18) = -SK_RNG(1)*(OP(18,10)*SK_RNG(2) - 2*OP(18,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(18,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(18,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(18,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(19) = -SK_RNG(1)*(OP(19,10)*SK_RNG(2) - 2*OP(19,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(19,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(19,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(19,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(20) = -SK_RNG(1)*(OP(20,10)*SK_RNG(2) - 2*OP(20,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(20,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(20,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(20,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(21) = -SK_RNG(1)*(OP(21,10)*SK_RNG(2) - 2*OP(21,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(21,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(21,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(21,4)*SH_RNG(2)*SH_RNG(3)*q3);
Kfusion(22) = -SK_RNG(1)*(OP(22,10)*SK_RNG(2) - 2*OP(22,1)*SH_RNG(2)*SH_RNG(3)*q0 + 2*OP(22,2)*SH_RNG(2)*SH_RNG(3)*q1 + 2*OP(22,3)*SH_RNG(2)*SH_RNG(3)*q2 - 2*OP(22,4)*SH_RNG(2)*SH_RNG(3)*q3);
SH_MAGS = zeros(23,1);
SH_MAGS(1) = magN*q0^4 + magN*q1^4 + magN*q2^4 + magN*q3^4 + magX*q0^2 + magX*q1^2 - magX*q2^2 - magX*q3^2 + 2*magN*q0^2*q1^2 + 2*magN*q0^2*q2^2 + 2*magN*q0^2*q3^2 + 2*magN*q1^2*q2^2 + 2*magN*q1^2*q3^2 + 2*magN*q2^2*q3^2 - 2*magY*q0*q3 + 2*magY*q1*q2 + 2*magZ*q0*q2 + 2*magZ*q1*q3;
SH_MAGS(2) = magE*q0^4 + magE*q1^4 + magE*q2^4 + magE*q3^4 + magY*q0^2 - magY*q1^2 + magY*q2^2 - magY*q3^2 + 2*magE*q0^2*q1^2 + 2*magE*q0^2*q2^2 + 2*magE*q0^2*q3^2 + 2*magE*q1^2*q2^2 + 2*magE*q1^2*q3^2 + 2*magE*q2^2*q3^2 + 2*magX*q0*q3 + 2*magX*q1*q2 - 2*magZ*q0*q1 + 2*magZ*q2*q3;
SH_MAGS(3) = tan(SH_MAGS(2)/SH_MAGS(1))^2 + 1;
SH_MAGS(4) = q0^2 + q1^2 + q2^2 + q3^2;
SH_MAGS(5) = q3^2;
SH_MAGS(6) = q2^2;
SH_MAGS(7) = q1^2;
SH_MAGS(8) = q0^2;
SH_MAGS(9) = 1/SH_MAGS(1)^2;
SH_MAGS(10) = 1/SH_MAGS(1);
SH_MAGS(11) = 2*magZ*q2;
SH_MAGS(12) = 2*magX*q0;
SH_MAGS(13) = 2*magZ*q3;
SH_MAGS(14) = 2*magY*q2;
SH_MAGS(15) = 2*magX*q1;
SH_MAGS(16) = SH_MAGS(8)^2;
SH_MAGS(17) = SH_MAGS(7)^2;
SH_MAGS(18) = SH_MAGS(6)^2;
SH_MAGS(19) = SH_MAGS(5)^2;
SH_MAGS(20) = SH_MAGS(4)^2;
SH_MAGS(21) = 2*magX*q3;
SH_MAGS(22) = 2*magY*q0;
SH_MAGS(23) = 2*magX*q2;
H_MAGS = zeros(1,22);
H_MAGS(1) = SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0));
H_MAGS(2) = SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1));
H_MAGS(3) = SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2));
H_MAGS(4) = SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3));
H_MAGS(17) = -SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20);
H_MAGS(18) = SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20);
H_MAGS(20) = SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2);
H_MAGS(21) = SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2);
H_MAGS(22) = -2*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3);
SK_MAGS = zeros(8,1);
SK_MAGS(1) = 1/(R_MAGS + SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0))*(OP(1,1)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,1)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,1)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,1)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,1)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(21,1)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) + OP(20,1)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) - 2*OP(22,1)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,1)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) + SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1))*(OP(1,2)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,2)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,2)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,2)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,2)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(21,2)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) + OP(20,2)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) - 2*OP(22,2)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,2)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) + SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2))*(OP(1,3)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,3)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,3)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,3)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,3)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(21,3)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) + OP(20,3)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) - 2*OP(22,3)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,3)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) + SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3))*(OP(1,4)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,4)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,4)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,4)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,4)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(21,4)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) + OP(20,4)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) - 2*OP(22,4)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,4)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) + SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20)*(OP(1,18)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,18)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,18)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,18)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(20,18)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) + OP(21,18)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) - 2*OP(22,18)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,18)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) - SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)*(OP(1,17)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,17)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,17)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,17)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,17)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(20,17)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) + OP(21,17)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) - 2*OP(22,17)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20)) + SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(OP(1,21)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,21)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,21)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,21)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,21)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(20,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) + OP(21,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) - 2*OP(22,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,21)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20))*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) + SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(OP(1,20)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,20)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,20)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,20)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,20)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(20,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) + OP(21,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) - 2*OP(22,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,20)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20))*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) - 2*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(OP(1,22)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0)) + OP(2,22)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1)) + OP(3,22)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2)) + OP(4,22)*SH_MAGS(3)*(SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3)) + OP(18,22)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) + OP(20,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2) + OP(21,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2) - 2*OP(22,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3) - OP(17,22)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20))*(magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3));
SK_MAGS(2) = magX*q0*q1 + magY*q0*q2 + magX*q2*q3 - magY*q1*q3 + SH_MAGS(5)*magE*q0*q2 + SH_MAGS(6)*magE*q0*q2 + SH_MAGS(5)*magE*q1*q3 + SH_MAGS(7)*magE*q0*q2 + SH_MAGS(6)*magE*q1*q3 + SH_MAGS(8)*magE*q0*q2 + SH_MAGS(7)*magE*q1*q3 + SH_MAGS(8)*magE*q1*q3 + SH_MAGS(5)*magN*q0*q1 + SH_MAGS(6)*magN*q0*q1 + SH_MAGS(7)*magN*q0*q1 + SH_MAGS(8)*magN*q0*q1 - SH_MAGS(5)*magN*q2*q3 - SH_MAGS(6)*magN*q2*q3 - SH_MAGS(7)*magN*q2*q3 - SH_MAGS(8)*magN*q2*q3;
SK_MAGS(3) = SH_MAGS(5)*magX - SH_MAGS(6)*magX + SH_MAGS(16)*magN - SH_MAGS(7)*magX - SH_MAGS(17)*magN + SH_MAGS(8)*magX + SH_MAGS(18)*magN - SH_MAGS(19)*magN + SH_MAGS(11)*q0 - 2*SH_MAGS(5)*SH_MAGS(7)*magN + 2*SH_MAGS(6)*SH_MAGS(8)*magN - 2*magZ*q1*q3 + 2*SH_MAGS(5)*magE*q0*q3 - 2*SH_MAGS(5)*magE*q1*q2 + 2*SH_MAGS(6)*magE*q0*q3 - 2*SH_MAGS(6)*magE*q1*q2 + 2*SH_MAGS(7)*magE*q0*q3 - 2*SH_MAGS(7)*magE*q1*q2 + 2*SH_MAGS(8)*magE*q0*q3 - 2*SH_MAGS(8)*magE*q1*q2;
SK_MAGS(4) = SH_MAGS(18)*magE - SH_MAGS(17)*magE - SH_MAGS(16)*magE + SH_MAGS(19)*magE - SH_MAGS(5)*magY + SH_MAGS(6)*magY + SH_MAGS(7)*magY - SH_MAGS(8)*magY + SH_MAGS(11)*q3 + 2*SH_MAGS(5)*SH_MAGS(6)*magE - 2*SH_MAGS(7)*SH_MAGS(8)*magE + 2*magZ*q0*q1 + 2*SH_MAGS(5)*magN*q0*q3 + 2*SH_MAGS(5)*magN*q1*q2 + 2*SH_MAGS(6)*magN*q0*q3 + 2*SH_MAGS(6)*magN*q1*q2 + 2*SH_MAGS(7)*magN*q0*q3 + 2*SH_MAGS(7)*magN*q1*q2 + 2*SH_MAGS(8)*magN*q0*q3 + 2*SH_MAGS(8)*magN*q1*q2;
SK_MAGS(5) = SH_MAGS(10)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magE*q3 + 4*SH_MAGS(6)*magE*q3 + 4*SH_MAGS(7)*magE*q3 + 4*SH_MAGS(8)*magE*q3) - SH_MAGS(2)*SH_MAGS(9)*(2*magZ*q1 - SH_MAGS(22) - SH_MAGS(21) + 4*SH_MAGS(5)*magN*q3 + 4*SH_MAGS(6)*magN*q3 + 4*SH_MAGS(7)*magN*q3 + 4*SH_MAGS(8)*magN*q3);
SK_MAGS(6) = SH_MAGS(10)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magE*q2 + 4*SH_MAGS(6)*magE*q2 + 4*SH_MAGS(7)*magE*q2 + 4*SH_MAGS(8)*magE*q2) - SH_MAGS(2)*SH_MAGS(9)*(2*magY*q1 - SH_MAGS(23) + 2*magZ*q0 + 4*SH_MAGS(5)*magN*q2 + 4*SH_MAGS(6)*magN*q2 + 4*SH_MAGS(7)*magN*q2 + 4*SH_MAGS(8)*magN*q2);
SK_MAGS(7) = SH_MAGS(10)*(SH_MAGS(23) - 2*magY*q1 - 2*magZ*q0 + 4*SH_MAGS(5)*magE*q1 + 4*SH_MAGS(6)*magE*q1 + 4*SH_MAGS(7)*magE*q1 + 4*SH_MAGS(8)*magE*q1) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(13) + SH_MAGS(14) + SH_MAGS(15) + 4*SH_MAGS(5)*magN*q1 + 4*SH_MAGS(6)*magN*q1 + 4*SH_MAGS(7)*magN*q1 + 4*SH_MAGS(8)*magN*q1);
SK_MAGS(8) = SH_MAGS(10)*(SH_MAGS(21) + SH_MAGS(22) - 2*magZ*q1 + 4*SH_MAGS(5)*magE*q0 + 4*SH_MAGS(6)*magE*q0 + 4*SH_MAGS(7)*magE*q0 + 4*SH_MAGS(8)*magE*q0) - SH_MAGS(2)*SH_MAGS(9)*(SH_MAGS(11) + SH_MAGS(12) - 2*magY*q3 + 4*SH_MAGS(5)*magN*q0 + 4*SH_MAGS(6)*magN*q0 + 4*SH_MAGS(7)*magN*q0 + 4*SH_MAGS(8)*magN*q0);
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_MAGS(1)*(OP(1,1)*SH_MAGS(3)*SK_MAGS(8) + OP(1,2)*SH_MAGS(3)*SK_MAGS(7) + OP(1,3)*SH_MAGS(3)*SK_MAGS(6) + OP(1,4)*SH_MAGS(3)*SK_MAGS(5) + OP(1,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(1,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(1,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(1,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(1,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(2) = SK_MAGS(1)*(OP(2,1)*SH_MAGS(3)*SK_MAGS(8) + OP(2,2)*SH_MAGS(3)*SK_MAGS(7) + OP(2,3)*SH_MAGS(3)*SK_MAGS(6) + OP(2,4)*SH_MAGS(3)*SK_MAGS(5) + OP(2,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(2,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(2,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(2,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(2,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(3) = SK_MAGS(1)*(OP(3,1)*SH_MAGS(3)*SK_MAGS(8) + OP(3,2)*SH_MAGS(3)*SK_MAGS(7) + OP(3,3)*SH_MAGS(3)*SK_MAGS(6) + OP(3,4)*SH_MAGS(3)*SK_MAGS(5) + OP(3,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(3,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(3,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(3,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(3,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(4) = SK_MAGS(1)*(OP(4,1)*SH_MAGS(3)*SK_MAGS(8) + OP(4,2)*SH_MAGS(3)*SK_MAGS(7) + OP(4,3)*SH_MAGS(3)*SK_MAGS(6) + OP(4,4)*SH_MAGS(3)*SK_MAGS(5) + OP(4,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(4,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(4,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(4,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(4,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(5) = SK_MAGS(1)*(OP(5,1)*SH_MAGS(3)*SK_MAGS(8) + OP(5,2)*SH_MAGS(3)*SK_MAGS(7) + OP(5,3)*SH_MAGS(3)*SK_MAGS(6) + OP(5,4)*SH_MAGS(3)*SK_MAGS(5) + OP(5,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(5,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(5,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(5,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(5,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(6) = SK_MAGS(1)*(OP(6,1)*SH_MAGS(3)*SK_MAGS(8) + OP(6,2)*SH_MAGS(3)*SK_MAGS(7) + OP(6,3)*SH_MAGS(3)*SK_MAGS(6) + OP(6,4)*SH_MAGS(3)*SK_MAGS(5) + OP(6,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(6,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(6,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(6,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(6,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(7) = SK_MAGS(1)*(OP(7,1)*SH_MAGS(3)*SK_MAGS(8) + OP(7,2)*SH_MAGS(3)*SK_MAGS(7) + OP(7,3)*SH_MAGS(3)*SK_MAGS(6) + OP(7,4)*SH_MAGS(3)*SK_MAGS(5) + OP(7,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(7,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(7,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(7,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(7,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(8) = SK_MAGS(1)*(OP(8,1)*SH_MAGS(3)*SK_MAGS(8) + OP(8,2)*SH_MAGS(3)*SK_MAGS(7) + OP(8,3)*SH_MAGS(3)*SK_MAGS(6) + OP(8,4)*SH_MAGS(3)*SK_MAGS(5) + OP(8,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(8,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(8,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(8,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(8,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(9) = SK_MAGS(1)*(OP(9,1)*SH_MAGS(3)*SK_MAGS(8) + OP(9,2)*SH_MAGS(3)*SK_MAGS(7) + OP(9,3)*SH_MAGS(3)*SK_MAGS(6) + OP(9,4)*SH_MAGS(3)*SK_MAGS(5) + OP(9,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(9,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(9,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(9,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(9,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(10) = SK_MAGS(1)*(OP(10,1)*SH_MAGS(3)*SK_MAGS(8) + OP(10,2)*SH_MAGS(3)*SK_MAGS(7) + OP(10,3)*SH_MAGS(3)*SK_MAGS(6) + OP(10,4)*SH_MAGS(3)*SK_MAGS(5) + OP(10,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(10,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(10,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(10,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(10,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(11) = SK_MAGS(1)*(OP(11,1)*SH_MAGS(3)*SK_MAGS(8) + OP(11,2)*SH_MAGS(3)*SK_MAGS(7) + OP(11,3)*SH_MAGS(3)*SK_MAGS(6) + OP(11,4)*SH_MAGS(3)*SK_MAGS(5) + OP(11,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(11,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(11,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(11,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(11,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(12) = SK_MAGS(1)*(OP(12,1)*SH_MAGS(3)*SK_MAGS(8) + OP(12,2)*SH_MAGS(3)*SK_MAGS(7) + OP(12,3)*SH_MAGS(3)*SK_MAGS(6) + OP(12,4)*SH_MAGS(3)*SK_MAGS(5) + OP(12,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(12,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(12,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(12,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(12,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(13) = SK_MAGS(1)*(OP(13,1)*SH_MAGS(3)*SK_MAGS(8) + OP(13,2)*SH_MAGS(3)*SK_MAGS(7) + OP(13,3)*SH_MAGS(3)*SK_MAGS(6) + OP(13,4)*SH_MAGS(3)*SK_MAGS(5) + OP(13,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(13,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(13,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(13,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(13,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(14) = SK_MAGS(1)*(OP(14,1)*SH_MAGS(3)*SK_MAGS(8) + OP(14,2)*SH_MAGS(3)*SK_MAGS(7) + OP(14,3)*SH_MAGS(3)*SK_MAGS(6) + OP(14,4)*SH_MAGS(3)*SK_MAGS(5) + OP(14,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(14,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(14,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(14,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(14,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(15) = SK_MAGS(1)*(OP(15,1)*SH_MAGS(3)*SK_MAGS(8) + OP(15,2)*SH_MAGS(3)*SK_MAGS(7) + OP(15,3)*SH_MAGS(3)*SK_MAGS(6) + OP(15,4)*SH_MAGS(3)*SK_MAGS(5) + OP(15,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(15,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(15,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(15,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(15,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(16) = SK_MAGS(1)*(OP(16,1)*SH_MAGS(3)*SK_MAGS(8) + OP(16,2)*SH_MAGS(3)*SK_MAGS(7) + OP(16,3)*SH_MAGS(3)*SK_MAGS(6) + OP(16,4)*SH_MAGS(3)*SK_MAGS(5) + OP(16,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(16,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(16,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(16,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(16,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(17) = SK_MAGS(1)*(OP(17,1)*SH_MAGS(3)*SK_MAGS(8) + OP(17,2)*SH_MAGS(3)*SK_MAGS(7) + OP(17,3)*SH_MAGS(3)*SK_MAGS(6) + OP(17,4)*SH_MAGS(3)*SK_MAGS(5) + OP(17,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(17,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(17,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(17,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(17,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(18) = SK_MAGS(1)*(OP(18,1)*SH_MAGS(3)*SK_MAGS(8) + OP(18,2)*SH_MAGS(3)*SK_MAGS(7) + OP(18,3)*SH_MAGS(3)*SK_MAGS(6) + OP(18,4)*SH_MAGS(3)*SK_MAGS(5) + OP(18,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(18,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(18,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(18,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(18,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(19) = SK_MAGS(1)*(OP(19,1)*SH_MAGS(3)*SK_MAGS(8) + OP(19,2)*SH_MAGS(3)*SK_MAGS(7) + OP(19,3)*SH_MAGS(3)*SK_MAGS(6) + OP(19,4)*SH_MAGS(3)*SK_MAGS(5) + OP(19,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(19,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(19,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(19,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(19,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(20) = SK_MAGS(1)*(OP(20,1)*SH_MAGS(3)*SK_MAGS(8) + OP(20,2)*SH_MAGS(3)*SK_MAGS(7) + OP(20,3)*SH_MAGS(3)*SK_MAGS(6) + OP(20,4)*SH_MAGS(3)*SK_MAGS(5) + OP(20,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(20,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(20,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(20,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(20,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(21) = SK_MAGS(1)*(OP(21,1)*SH_MAGS(3)*SK_MAGS(8) + OP(21,2)*SH_MAGS(3)*SK_MAGS(7) + OP(21,3)*SH_MAGS(3)*SK_MAGS(6) + OP(21,4)*SH_MAGS(3)*SK_MAGS(5) + OP(21,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(21,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(21,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(21,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(21,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
Kfusion(22) = SK_MAGS(1)*(OP(22,1)*SH_MAGS(3)*SK_MAGS(8) + OP(22,2)*SH_MAGS(3)*SK_MAGS(7) + OP(22,3)*SH_MAGS(3)*SK_MAGS(6) + OP(22,4)*SH_MAGS(3)*SK_MAGS(5) + OP(22,18)*SH_MAGS(3)*SH_MAGS(10)*SH_MAGS(20) - OP(22,17)*SH_MAGS(2)*SH_MAGS(3)*SH_MAGS(9)*SH_MAGS(20) + OP(22,20)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(4) + OP(22,21)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(3) - 2*OP(22,22)*SH_MAGS(3)*SH_MAGS(4)*SH_MAGS(9)*SK_MAGS(2));
SH_ACCX = zeros(4,1);
SH_ACCX(1) = q0^2 + q1^2 - q2^2 - q3^2;
SH_ACCX(2) = vn - vwn;
SH_ACCX(3) = ve - vwe;
SH_ACCX(4) = 2*q0*q3 + 2*q1*q2;
H_ACCX = zeros(1,22);
H_ACCX(1,1) = -Kacc*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd);
H_ACCX(1,2) = -Kacc*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd);
H_ACCX(1,3) = Kacc*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd);
H_ACCX(1,4) = -Kacc*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd);
H_ACCX(1,5) = -Kacc*SH_ACCX(1);
H_ACCX(1,6) = -Kacc*SH_ACCX(4);
H_ACCX(1,7) = Kacc*(2*q0*q2 - 2*q1*q3);
H_ACCX(1,15) = Kacc*SH_ACCX(1);
H_ACCX(1,16) = Kacc*SH_ACCX(4);
SK_ACCX = zeros(6,1);
SK_ACCX(1) = 1/(R_ACC + Kacc*SH_ACCX(1)*(Kacc*OP(5,5)*SH_ACCX(1) + Kacc*OP(6,5)*SH_ACCX(4) - Kacc*OP(15,5)*SH_ACCX(1) - Kacc*OP(16,5)*SH_ACCX(4) - Kacc*OP(7,5)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,5)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,5)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,5)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,5)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) + Kacc*SH_ACCX(4)*(Kacc*OP(5,6)*SH_ACCX(1) + Kacc*OP(6,6)*SH_ACCX(4) - Kacc*OP(15,6)*SH_ACCX(1) - Kacc*OP(16,6)*SH_ACCX(4) - Kacc*OP(7,6)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,6)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,6)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,6)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,6)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) - Kacc*SH_ACCX(1)*(Kacc*OP(5,15)*SH_ACCX(1) + Kacc*OP(6,15)*SH_ACCX(4) - Kacc*OP(15,15)*SH_ACCX(1) - Kacc*OP(16,15)*SH_ACCX(4) - Kacc*OP(7,15)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,15)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,15)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,15)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,15)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) - Kacc*SH_ACCX(4)*(Kacc*OP(5,16)*SH_ACCX(1) + Kacc*OP(6,16)*SH_ACCX(4) - Kacc*OP(15,16)*SH_ACCX(1) - Kacc*OP(16,16)*SH_ACCX(4) - Kacc*OP(7,16)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,16)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,16)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,16)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,16)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) - Kacc*(2*q0*q2 - 2*q1*q3)*(Kacc*OP(5,7)*SH_ACCX(1) + Kacc*OP(6,7)*SH_ACCX(4) - Kacc*OP(15,7)*SH_ACCX(1) - Kacc*OP(16,7)*SH_ACCX(4) - Kacc*OP(7,7)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,7)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,7)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,7)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,7)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) + Kacc*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd)*(Kacc*OP(5,1)*SH_ACCX(1) + Kacc*OP(6,1)*SH_ACCX(4) - Kacc*OP(15,1)*SH_ACCX(1) - Kacc*OP(16,1)*SH_ACCX(4) - Kacc*OP(7,1)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,1)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,1)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,1)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,1)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) + Kacc*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd)*(Kacc*OP(5,2)*SH_ACCX(1) + Kacc*OP(6,2)*SH_ACCX(4) - Kacc*OP(15,2)*SH_ACCX(1) - Kacc*OP(16,2)*SH_ACCX(4) - Kacc*OP(7,2)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,2)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,2)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,2)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,2)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) - Kacc*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd)*(Kacc*OP(5,3)*SH_ACCX(1) + Kacc*OP(6,3)*SH_ACCX(4) - Kacc*OP(15,3)*SH_ACCX(1) - Kacc*OP(16,3)*SH_ACCX(4) - Kacc*OP(7,3)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,3)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,3)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,3)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,3)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)) + Kacc*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)*(Kacc*OP(5,4)*SH_ACCX(1) + Kacc*OP(6,4)*SH_ACCX(4) - Kacc*OP(15,4)*SH_ACCX(1) - Kacc*OP(16,4)*SH_ACCX(4) - Kacc*OP(7,4)*(2*q0*q2 - 2*q1*q3) + Kacc*OP(1,4)*(2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd) + Kacc*OP(2,4)*(2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd) - Kacc*OP(3,4)*(2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd) + Kacc*OP(4,4)*(2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd)));
SK_ACCX(2) = 2*SH_ACCX(3)*q0 - 2*SH_ACCX(2)*q3 + 2*q1*vd;
SK_ACCX(3) = 2*SH_ACCX(2)*q2 - 2*SH_ACCX(3)*q1 + 2*q0*vd;
SK_ACCX(4) = 2*SH_ACCX(2)*q0 + 2*SH_ACCX(3)*q3 - 2*q2*vd;
SK_ACCX(5) = 2*SH_ACCX(2)*q1 + 2*SH_ACCX(3)*q2 + 2*q3*vd;
SK_ACCX(6) = 2*q0*q2 - 2*q1*q3;
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = -SK_ACCX(1)*(Kacc*OP(1,5)*SH_ACCX(1) + Kacc*OP(1,6)*SH_ACCX(4) - Kacc*OP(1,15)*SH_ACCX(1) - Kacc*OP(1,16)*SH_ACCX(4) + Kacc*OP(1,1)*SK_ACCX(4) - Kacc*OP(1,3)*SK_ACCX(3) + Kacc*OP(1,4)*SK_ACCX(2) + Kacc*OP(1,2)*SK_ACCX(5) - Kacc*OP(1,7)*SK_ACCX(6));
Kfusion(2) = -SK_ACCX(1)*(Kacc*OP(2,5)*SH_ACCX(1) + Kacc*OP(2,6)*SH_ACCX(4) - Kacc*OP(2,15)*SH_ACCX(1) - Kacc*OP(2,16)*SH_ACCX(4) + Kacc*OP(2,1)*SK_ACCX(4) - Kacc*OP(2,3)*SK_ACCX(3) + Kacc*OP(2,4)*SK_ACCX(2) + Kacc*OP(2,2)*SK_ACCX(5) - Kacc*OP(2,7)*SK_ACCX(6));
Kfusion(3) = -SK_ACCX(1)*(Kacc*OP(3,5)*SH_ACCX(1) + Kacc*OP(3,6)*SH_ACCX(4) - Kacc*OP(3,15)*SH_ACCX(1) - Kacc*OP(3,16)*SH_ACCX(4) + Kacc*OP(3,1)*SK_ACCX(4) - Kacc*OP(3,3)*SK_ACCX(3) + Kacc*OP(3,4)*SK_ACCX(2) + Kacc*OP(3,2)*SK_ACCX(5) - Kacc*OP(3,7)*SK_ACCX(6));
Kfusion(4) = -SK_ACCX(1)*(Kacc*OP(4,5)*SH_ACCX(1) + Kacc*OP(4,6)*SH_ACCX(4) - Kacc*OP(4,15)*SH_ACCX(1) - Kacc*OP(4,16)*SH_ACCX(4) + Kacc*OP(4,1)*SK_ACCX(4) - Kacc*OP(4,3)*SK_ACCX(3) + Kacc*OP(4,4)*SK_ACCX(2) + Kacc*OP(4,2)*SK_ACCX(5) - Kacc*OP(4,7)*SK_ACCX(6));
Kfusion(5) = -SK_ACCX(1)*(Kacc*OP(5,5)*SH_ACCX(1) + Kacc*OP(5,6)*SH_ACCX(4) - Kacc*OP(5,15)*SH_ACCX(1) - Kacc*OP(5,16)*SH_ACCX(4) + Kacc*OP(5,1)*SK_ACCX(4) - Kacc*OP(5,3)*SK_ACCX(3) + Kacc*OP(5,4)*SK_ACCX(2) + Kacc*OP(5,2)*SK_ACCX(5) - Kacc*OP(5,7)*SK_ACCX(6));
Kfusion(6) = -SK_ACCX(1)*(Kacc*OP(6,5)*SH_ACCX(1) + Kacc*OP(6,6)*SH_ACCX(4) - Kacc*OP(6,15)*SH_ACCX(1) - Kacc*OP(6,16)*SH_ACCX(4) + Kacc*OP(6,1)*SK_ACCX(4) - Kacc*OP(6,3)*SK_ACCX(3) + Kacc*OP(6,4)*SK_ACCX(2) + Kacc*OP(6,2)*SK_ACCX(5) - Kacc*OP(6,7)*SK_ACCX(6));
Kfusion(7) = -SK_ACCX(1)*(Kacc*OP(7,5)*SH_ACCX(1) + Kacc*OP(7,6)*SH_ACCX(4) - Kacc*OP(7,15)*SH_ACCX(1) - Kacc*OP(7,16)*SH_ACCX(4) + Kacc*OP(7,1)*SK_ACCX(4) - Kacc*OP(7,3)*SK_ACCX(3) + Kacc*OP(7,4)*SK_ACCX(2) + Kacc*OP(7,2)*SK_ACCX(5) - Kacc*OP(7,7)*SK_ACCX(6));
Kfusion(8) = -SK_ACCX(1)*(Kacc*OP(8,5)*SH_ACCX(1) + Kacc*OP(8,6)*SH_ACCX(4) - Kacc*OP(8,15)*SH_ACCX(1) - Kacc*OP(8,16)*SH_ACCX(4) + Kacc*OP(8,1)*SK_ACCX(4) - Kacc*OP(8,3)*SK_ACCX(3) + Kacc*OP(8,4)*SK_ACCX(2) + Kacc*OP(8,2)*SK_ACCX(5) - Kacc*OP(8,7)*SK_ACCX(6));
Kfusion(9) = -SK_ACCX(1)*(Kacc*OP(9,5)*SH_ACCX(1) + Kacc*OP(9,6)*SH_ACCX(4) - Kacc*OP(9,15)*SH_ACCX(1) - Kacc*OP(9,16)*SH_ACCX(4) + Kacc*OP(9,1)*SK_ACCX(4) - Kacc*OP(9,3)*SK_ACCX(3) + Kacc*OP(9,4)*SK_ACCX(2) + Kacc*OP(9,2)*SK_ACCX(5) - Kacc*OP(9,7)*SK_ACCX(6));
Kfusion(10) = -SK_ACCX(1)*(Kacc*OP(10,5)*SH_ACCX(1) + Kacc*OP(10,6)*SH_ACCX(4) - Kacc*OP(10,15)*SH_ACCX(1) - Kacc*OP(10,16)*SH_ACCX(4) + Kacc*OP(10,1)*SK_ACCX(4) - Kacc*OP(10,3)*SK_ACCX(3) + Kacc*OP(10,4)*SK_ACCX(2) + Kacc*OP(10,2)*SK_ACCX(5) - Kacc*OP(10,7)*SK_ACCX(6));
Kfusion(11) = -SK_ACCX(1)*(Kacc*OP(11,5)*SH_ACCX(1) + Kacc*OP(11,6)*SH_ACCX(4) - Kacc*OP(11,15)*SH_ACCX(1) - Kacc*OP(11,16)*SH_ACCX(4) + Kacc*OP(11,1)*SK_ACCX(4) - Kacc*OP(11,3)*SK_ACCX(3) + Kacc*OP(11,4)*SK_ACCX(2) + Kacc*OP(11,2)*SK_ACCX(5) - Kacc*OP(11,7)*SK_ACCX(6));
Kfusion(12) = -SK_ACCX(1)*(Kacc*OP(12,5)*SH_ACCX(1) + Kacc*OP(12,6)*SH_ACCX(4) - Kacc*OP(12,15)*SH_ACCX(1) - Kacc*OP(12,16)*SH_ACCX(4) + Kacc*OP(12,1)*SK_ACCX(4) - Kacc*OP(12,3)*SK_ACCX(3) + Kacc*OP(12,4)*SK_ACCX(2) + Kacc*OP(12,2)*SK_ACCX(5) - Kacc*OP(12,7)*SK_ACCX(6));
Kfusion(13) = -SK_ACCX(1)*(Kacc*OP(13,5)*SH_ACCX(1) + Kacc*OP(13,6)*SH_ACCX(4) - Kacc*OP(13,15)*SH_ACCX(1) - Kacc*OP(13,16)*SH_ACCX(4) + Kacc*OP(13,1)*SK_ACCX(4) - Kacc*OP(13,3)*SK_ACCX(3) + Kacc*OP(13,4)*SK_ACCX(2) + Kacc*OP(13,2)*SK_ACCX(5) - Kacc*OP(13,7)*SK_ACCX(6));
Kfusion(14) = -SK_ACCX(1)*(Kacc*OP(14,5)*SH_ACCX(1) + Kacc*OP(14,6)*SH_ACCX(4) - Kacc*OP(14,15)*SH_ACCX(1) - Kacc*OP(14,16)*SH_ACCX(4) + Kacc*OP(14,1)*SK_ACCX(4) - Kacc*OP(14,3)*SK_ACCX(3) + Kacc*OP(14,4)*SK_ACCX(2) + Kacc*OP(14,2)*SK_ACCX(5) - Kacc*OP(14,7)*SK_ACCX(6));
Kfusion(15) = -SK_ACCX(1)*(Kacc*OP(15,5)*SH_ACCX(1) + Kacc*OP(15,6)*SH_ACCX(4) - Kacc*OP(15,15)*SH_ACCX(1) - Kacc*OP(15,16)*SH_ACCX(4) + Kacc*OP(15,1)*SK_ACCX(4) - Kacc*OP(15,3)*SK_ACCX(3) + Kacc*OP(15,4)*SK_ACCX(2) + Kacc*OP(15,2)*SK_ACCX(5) - Kacc*OP(15,7)*SK_ACCX(6));
Kfusion(16) = -SK_ACCX(1)*(Kacc*OP(16,5)*SH_ACCX(1) + Kacc*OP(16,6)*SH_ACCX(4) - Kacc*OP(16,15)*SH_ACCX(1) - Kacc*OP(16,16)*SH_ACCX(4) + Kacc*OP(16,1)*SK_ACCX(4) - Kacc*OP(16,3)*SK_ACCX(3) + Kacc*OP(16,4)*SK_ACCX(2) + Kacc*OP(16,2)*SK_ACCX(5) - Kacc*OP(16,7)*SK_ACCX(6));
Kfusion(17) = -SK_ACCX(1)*(Kacc*OP(17,5)*SH_ACCX(1) + Kacc*OP(17,6)*SH_ACCX(4) - Kacc*OP(17,15)*SH_ACCX(1) - Kacc*OP(17,16)*SH_ACCX(4) + Kacc*OP(17,1)*SK_ACCX(4) - Kacc*OP(17,3)*SK_ACCX(3) + Kacc*OP(17,4)*SK_ACCX(2) + Kacc*OP(17,2)*SK_ACCX(5) - Kacc*OP(17,7)*SK_ACCX(6));
Kfusion(18) = -SK_ACCX(1)*(Kacc*OP(18,5)*SH_ACCX(1) + Kacc*OP(18,6)*SH_ACCX(4) - Kacc*OP(18,15)*SH_ACCX(1) - Kacc*OP(18,16)*SH_ACCX(4) + Kacc*OP(18,1)*SK_ACCX(4) - Kacc*OP(18,3)*SK_ACCX(3) + Kacc*OP(18,4)*SK_ACCX(2) + Kacc*OP(18,2)*SK_ACCX(5) - Kacc*OP(18,7)*SK_ACCX(6));
Kfusion(19) = -SK_ACCX(1)*(Kacc*OP(19,5)*SH_ACCX(1) + Kacc*OP(19,6)*SH_ACCX(4) - Kacc*OP(19,15)*SH_ACCX(1) - Kacc*OP(19,16)*SH_ACCX(4) + Kacc*OP(19,1)*SK_ACCX(4) - Kacc*OP(19,3)*SK_ACCX(3) + Kacc*OP(19,4)*SK_ACCX(2) + Kacc*OP(19,2)*SK_ACCX(5) - Kacc*OP(19,7)*SK_ACCX(6));
Kfusion(20) = -SK_ACCX(1)*(Kacc*OP(20,5)*SH_ACCX(1) + Kacc*OP(20,6)*SH_ACCX(4) - Kacc*OP(20,15)*SH_ACCX(1) - Kacc*OP(20,16)*SH_ACCX(4) + Kacc*OP(20,1)*SK_ACCX(4) - Kacc*OP(20,3)*SK_ACCX(3) + Kacc*OP(20,4)*SK_ACCX(2) + Kacc*OP(20,2)*SK_ACCX(5) - Kacc*OP(20,7)*SK_ACCX(6));
Kfusion(21) = -SK_ACCX(1)*(Kacc*OP(21,5)*SH_ACCX(1) + Kacc*OP(21,6)*SH_ACCX(4) - Kacc*OP(21,15)*SH_ACCX(1) - Kacc*OP(21,16)*SH_ACCX(4) + Kacc*OP(21,1)*SK_ACCX(4) - Kacc*OP(21,3)*SK_ACCX(3) + Kacc*OP(21,4)*SK_ACCX(2) + Kacc*OP(21,2)*SK_ACCX(5) - Kacc*OP(21,7)*SK_ACCX(6));
Kfusion(22) = -SK_ACCX(1)*(Kacc*OP(22,5)*SH_ACCX(1) + Kacc*OP(22,6)*SH_ACCX(4) - Kacc*OP(22,15)*SH_ACCX(1) - Kacc*OP(22,16)*SH_ACCX(4) + Kacc*OP(22,1)*SK_ACCX(4) - Kacc*OP(22,3)*SK_ACCX(3) + Kacc*OP(22,4)*SK_ACCX(2) + Kacc*OP(22,2)*SK_ACCX(5) - Kacc*OP(22,7)*SK_ACCX(6));
SH_ACCY = zeros(4,1);
SH_ACCY(1) = q0^2 - q1^2 + q2^2 - q3^2;
SH_ACCY(2) = vn - vwn;
SH_ACCY(3) = ve - vwe;
SH_ACCY(4) = Kacc*(2*q0*q3 - 2*q1*q2);
H_ACCY = zeros(1,22);
H_ACCY(1,1) = -Kacc*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd);
H_ACCY(1,2) = -Kacc*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd);
H_ACCY(1,3) = -Kacc*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd);
H_ACCY(1,4) = Kacc*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd);
H_ACCY(1,5) = SH_ACCY(4);
H_ACCY(1,6) = -Kacc*SH_ACCY(1);
H_ACCY(1,7) = -Kacc*(2*q0*q1 + 2*q2*q3);
H_ACCY(1,15) = -SH_ACCY(4);
H_ACCY(1,16) = Kacc*SH_ACCY(1);
SK_ACCY = zeros(6,1);
SK_ACCY(1) = 1/(R_ACC - SH_ACCY(4)*(OP(15,5)*SH_ACCY(4) - OP(5,5)*SH_ACCY(4) + Kacc*OP(6,5)*SH_ACCY(1) - Kacc*OP(16,5)*SH_ACCY(1) + Kacc*OP(7,5)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,5)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,5)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,5)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,5)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + SH_ACCY(4)*(OP(15,15)*SH_ACCY(4) - OP(5,15)*SH_ACCY(4) + Kacc*OP(6,15)*SH_ACCY(1) - Kacc*OP(16,15)*SH_ACCY(1) + Kacc*OP(7,15)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,15)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,15)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,15)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,15)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + Kacc*(2*q0*q1 + 2*q2*q3)*(OP(15,7)*SH_ACCY(4) - OP(5,7)*SH_ACCY(4) + Kacc*OP(6,7)*SH_ACCY(1) - Kacc*OP(16,7)*SH_ACCY(1) + Kacc*OP(7,7)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,7)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,7)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,7)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,7)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + Kacc*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd)*(OP(15,1)*SH_ACCY(4) - OP(5,1)*SH_ACCY(4) + Kacc*OP(6,1)*SH_ACCY(1) - Kacc*OP(16,1)*SH_ACCY(1) + Kacc*OP(7,1)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,1)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,1)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,1)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,1)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + Kacc*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd)*(OP(15,2)*SH_ACCY(4) - OP(5,2)*SH_ACCY(4) + Kacc*OP(6,2)*SH_ACCY(1) - Kacc*OP(16,2)*SH_ACCY(1) + Kacc*OP(7,2)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,2)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,2)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,2)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,2)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + Kacc*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd)*(OP(15,3)*SH_ACCY(4) - OP(5,3)*SH_ACCY(4) + Kacc*OP(6,3)*SH_ACCY(1) - Kacc*OP(16,3)*SH_ACCY(1) + Kacc*OP(7,3)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,3)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,3)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,3)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,3)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) - Kacc*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)*(OP(15,4)*SH_ACCY(4) - OP(5,4)*SH_ACCY(4) + Kacc*OP(6,4)*SH_ACCY(1) - Kacc*OP(16,4)*SH_ACCY(1) + Kacc*OP(7,4)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,4)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,4)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,4)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,4)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) + Kacc*SH_ACCY(1)*(OP(15,6)*SH_ACCY(4) - OP(5,6)*SH_ACCY(4) + Kacc*OP(6,6)*SH_ACCY(1) - Kacc*OP(16,6)*SH_ACCY(1) + Kacc*OP(7,6)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,6)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,6)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,6)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,6)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)) - Kacc*SH_ACCY(1)*(OP(15,16)*SH_ACCY(4) - OP(5,16)*SH_ACCY(4) + Kacc*OP(6,16)*SH_ACCY(1) - Kacc*OP(16,16)*SH_ACCY(1) + Kacc*OP(7,16)*(2*q0*q1 + 2*q2*q3) + Kacc*OP(1,16)*(2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd) + Kacc*OP(2,16)*(2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd) + Kacc*OP(3,16)*(2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd) - Kacc*OP(4,16)*(2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd)));
SK_ACCY(2) = 2*SH_ACCY(2)*q0 + 2*SH_ACCY(3)*q3 - 2*q2*vd;
SK_ACCY(3) = 2*SH_ACCY(2)*q2 - 2*SH_ACCY(3)*q1 + 2*q0*vd;
SK_ACCY(4) = 2*SH_ACCY(3)*q0 - 2*SH_ACCY(2)*q3 + 2*q1*vd;
SK_ACCY(5) = 2*SH_ACCY(2)*q1 + 2*SH_ACCY(3)*q2 + 2*q3*vd;
SK_ACCY(6) = 2*q0*q1 + 2*q2*q3;
Kfusion = zeros(22,1);
Kfusion = zeros(1,1);
Kfusion(1) = -SK_ACCY(1)*(OP(1,15)*SH_ACCY(4) - OP(1,5)*SH_ACCY(4) + Kacc*OP(1,6)*SH_ACCY(1) - Kacc*OP(1,16)*SH_ACCY(1) + Kacc*OP(1,1)*SK_ACCY(4) + Kacc*OP(1,2)*SK_ACCY(3) - Kacc*OP(1,4)*SK_ACCY(2) + Kacc*OP(1,3)*SK_ACCY(5) + Kacc*OP(1,7)*SK_ACCY(6));
Kfusion(2) = -SK_ACCY(1)*(OP(2,15)*SH_ACCY(4) - OP(2,5)*SH_ACCY(4) + Kacc*OP(2,6)*SH_ACCY(1) - Kacc*OP(2,16)*SH_ACCY(1) + Kacc*OP(2,1)*SK_ACCY(4) + Kacc*OP(2,2)*SK_ACCY(3) - Kacc*OP(2,4)*SK_ACCY(2) + Kacc*OP(2,3)*SK_ACCY(5) + Kacc*OP(2,7)*SK_ACCY(6));
Kfusion(3) = -SK_ACCY(1)*(OP(3,15)*SH_ACCY(4) - OP(3,5)*SH_ACCY(4) + Kacc*OP(3,6)*SH_ACCY(1) - Kacc*OP(3,16)*SH_ACCY(1) + Kacc*OP(3,1)*SK_ACCY(4) + Kacc*OP(3,2)*SK_ACCY(3) - Kacc*OP(3,4)*SK_ACCY(2) + Kacc*OP(3,3)*SK_ACCY(5) + Kacc*OP(3,7)*SK_ACCY(6));
Kfusion(4) = -SK_ACCY(1)*(OP(4,15)*SH_ACCY(4) - OP(4,5)*SH_ACCY(4) + Kacc*OP(4,6)*SH_ACCY(1) - Kacc*OP(4,16)*SH_ACCY(1) + Kacc*OP(4,1)*SK_ACCY(4) + Kacc*OP(4,2)*SK_ACCY(3) - Kacc*OP(4,4)*SK_ACCY(2) + Kacc*OP(4,3)*SK_ACCY(5) + Kacc*OP(4,7)*SK_ACCY(6));
Kfusion(5) = -SK_ACCY(1)*(OP(5,15)*SH_ACCY(4) - OP(5,5)*SH_ACCY(4) + Kacc*OP(5,6)*SH_ACCY(1) - Kacc*OP(5,16)*SH_ACCY(1) + Kacc*OP(5,1)*SK_ACCY(4) + Kacc*OP(5,2)*SK_ACCY(3) - Kacc*OP(5,4)*SK_ACCY(2) + Kacc*OP(5,3)*SK_ACCY(5) + Kacc*OP(5,7)*SK_ACCY(6));
Kfusion(6) = -SK_ACCY(1)*(OP(6,15)*SH_ACCY(4) - OP(6,5)*SH_ACCY(4) + Kacc*OP(6,6)*SH_ACCY(1) - Kacc*OP(6,16)*SH_ACCY(1) + Kacc*OP(6,1)*SK_ACCY(4) + Kacc*OP(6,2)*SK_ACCY(3) - Kacc*OP(6,4)*SK_ACCY(2) + Kacc*OP(6,3)*SK_ACCY(5) + Kacc*OP(6,7)*SK_ACCY(6));
Kfusion(7) = -SK_ACCY(1)*(OP(7,15)*SH_ACCY(4) - OP(7,5)*SH_ACCY(4) + Kacc*OP(7,6)*SH_ACCY(1) - Kacc*OP(7,16)*SH_ACCY(1) + Kacc*OP(7,1)*SK_ACCY(4) + Kacc*OP(7,2)*SK_ACCY(3) - Kacc*OP(7,4)*SK_ACCY(2) + Kacc*OP(7,3)*SK_ACCY(5) + Kacc*OP(7,7)*SK_ACCY(6));
Kfusion(8) = -SK_ACCY(1)*(OP(8,15)*SH_ACCY(4) - OP(8,5)*SH_ACCY(4) + Kacc*OP(8,6)*SH_ACCY(1) - Kacc*OP(8,16)*SH_ACCY(1) + Kacc*OP(8,1)*SK_ACCY(4) + Kacc*OP(8,2)*SK_ACCY(3) - Kacc*OP(8,4)*SK_ACCY(2) + Kacc*OP(8,3)*SK_ACCY(5) + Kacc*OP(8,7)*SK_ACCY(6));
Kfusion(9) = -SK_ACCY(1)*(OP(9,15)*SH_ACCY(4) - OP(9,5)*SH_ACCY(4) + Kacc*OP(9,6)*SH_ACCY(1) - Kacc*OP(9,16)*SH_ACCY(1) + Kacc*OP(9,1)*SK_ACCY(4) + Kacc*OP(9,2)*SK_ACCY(3) - Kacc*OP(9,4)*SK_ACCY(2) + Kacc*OP(9,3)*SK_ACCY(5) + Kacc*OP(9,7)*SK_ACCY(6));
Kfusion(10) = -SK_ACCY(1)*(OP(10,15)*SH_ACCY(4) - OP(10,5)*SH_ACCY(4) + Kacc*OP(10,6)*SH_ACCY(1) - Kacc*OP(10,16)*SH_ACCY(1) + Kacc*OP(10,1)*SK_ACCY(4) + Kacc*OP(10,2)*SK_ACCY(3) - Kacc*OP(10,4)*SK_ACCY(2) + Kacc*OP(10,3)*SK_ACCY(5) + Kacc*OP(10,7)*SK_ACCY(6));
Kfusion(11) = -SK_ACCY(1)*(OP(11,15)*SH_ACCY(4) - OP(11,5)*SH_ACCY(4) + Kacc*OP(11,6)*SH_ACCY(1) - Kacc*OP(11,16)*SH_ACCY(1) + Kacc*OP(11,1)*SK_ACCY(4) + Kacc*OP(11,2)*SK_ACCY(3) - Kacc*OP(11,4)*SK_ACCY(2) + Kacc*OP(11,3)*SK_ACCY(5) + Kacc*OP(11,7)*SK_ACCY(6));
Kfusion(12) = -SK_ACCY(1)*(OP(12,15)*SH_ACCY(4) - OP(12,5)*SH_ACCY(4) + Kacc*OP(12,6)*SH_ACCY(1) - Kacc*OP(12,16)*SH_ACCY(1) + Kacc*OP(12,1)*SK_ACCY(4) + Kacc*OP(12,2)*SK_ACCY(3) - Kacc*OP(12,4)*SK_ACCY(2) + Kacc*OP(12,3)*SK_ACCY(5) + Kacc*OP(12,7)*SK_ACCY(6));
Kfusion(13) = -SK_ACCY(1)*(OP(13,15)*SH_ACCY(4) - OP(13,5)*SH_ACCY(4) + Kacc*OP(13,6)*SH_ACCY(1) - Kacc*OP(13,16)*SH_ACCY(1) + Kacc*OP(13,1)*SK_ACCY(4) + Kacc*OP(13,2)*SK_ACCY(3) - Kacc*OP(13,4)*SK_ACCY(2) + Kacc*OP(13,3)*SK_ACCY(5) + Kacc*OP(13,7)*SK_ACCY(6));
Kfusion(14) = -SK_ACCY(1)*(OP(14,15)*SH_ACCY(4) - OP(14,5)*SH_ACCY(4) + Kacc*OP(14,6)*SH_ACCY(1) - Kacc*OP(14,16)*SH_ACCY(1) + Kacc*OP(14,1)*SK_ACCY(4) + Kacc*OP(14,2)*SK_ACCY(3) - Kacc*OP(14,4)*SK_ACCY(2) + Kacc*OP(14,3)*SK_ACCY(5) + Kacc*OP(14,7)*SK_ACCY(6));
Kfusion(15) = -SK_ACCY(1)*(OP(15,15)*SH_ACCY(4) - OP(15,5)*SH_ACCY(4) + Kacc*OP(15,6)*SH_ACCY(1) - Kacc*OP(15,16)*SH_ACCY(1) + Kacc*OP(15,1)*SK_ACCY(4) + Kacc*OP(15,2)*SK_ACCY(3) - Kacc*OP(15,4)*SK_ACCY(2) + Kacc*OP(15,3)*SK_ACCY(5) + Kacc*OP(15,7)*SK_ACCY(6));
Kfusion(16) = -SK_ACCY(1)*(OP(16,15)*SH_ACCY(4) - OP(16,5)*SH_ACCY(4) + Kacc*OP(16,6)*SH_ACCY(1) - Kacc*OP(16,16)*SH_ACCY(1) + Kacc*OP(16,1)*SK_ACCY(4) + Kacc*OP(16,2)*SK_ACCY(3) - Kacc*OP(16,4)*SK_ACCY(2) + Kacc*OP(16,3)*SK_ACCY(5) + Kacc*OP(16,7)*SK_ACCY(6));
Kfusion(17) = -SK_ACCY(1)*(OP(17,15)*SH_ACCY(4) - OP(17,5)*SH_ACCY(4) + Kacc*OP(17,6)*SH_ACCY(1) - Kacc*OP(17,16)*SH_ACCY(1) + Kacc*OP(17,1)*SK_ACCY(4) + Kacc*OP(17,2)*SK_ACCY(3) - Kacc*OP(17,4)*SK_ACCY(2) + Kacc*OP(17,3)*SK_ACCY(5) + Kacc*OP(17,7)*SK_ACCY(6));
Kfusion(18) = -SK_ACCY(1)*(OP(18,15)*SH_ACCY(4) - OP(18,5)*SH_ACCY(4) + Kacc*OP(18,6)*SH_ACCY(1) - Kacc*OP(18,16)*SH_ACCY(1) + Kacc*OP(18,1)*SK_ACCY(4) + Kacc*OP(18,2)*SK_ACCY(3) - Kacc*OP(18,4)*SK_ACCY(2) + Kacc*OP(18,3)*SK_ACCY(5) + Kacc*OP(18,7)*SK_ACCY(6));
Kfusion(19) = -SK_ACCY(1)*(OP(19,15)*SH_ACCY(4) - OP(19,5)*SH_ACCY(4) + Kacc*OP(19,6)*SH_ACCY(1) - Kacc*OP(19,16)*SH_ACCY(1) + Kacc*OP(19,1)*SK_ACCY(4) + Kacc*OP(19,2)*SK_ACCY(3) - Kacc*OP(19,4)*SK_ACCY(2) + Kacc*OP(19,3)*SK_ACCY(5) + Kacc*OP(19,7)*SK_ACCY(6));
Kfusion(20) = -SK_ACCY(1)*(OP(20,15)*SH_ACCY(4) - OP(20,5)*SH_ACCY(4) + Kacc*OP(20,6)*SH_ACCY(1) - Kacc*OP(20,16)*SH_ACCY(1) + Kacc*OP(20,1)*SK_ACCY(4) + Kacc*OP(20,2)*SK_ACCY(3) - Kacc*OP(20,4)*SK_ACCY(2) + Kacc*OP(20,3)*SK_ACCY(5) + Kacc*OP(20,7)*SK_ACCY(6));
Kfusion(21) = -SK_ACCY(1)*(OP(21,15)*SH_ACCY(4) - OP(21,5)*SH_ACCY(4) + Kacc*OP(21,6)*SH_ACCY(1) - Kacc*OP(21,16)*SH_ACCY(1) + Kacc*OP(21,1)*SK_ACCY(4) + Kacc*OP(21,2)*SK_ACCY(3) - Kacc*OP(21,4)*SK_ACCY(2) + Kacc*OP(21,3)*SK_ACCY(5) + Kacc*OP(21,7)*SK_ACCY(6));
Kfusion(22) = -SK_ACCY(1)*(OP(22,15)*SH_ACCY(4) - OP(22,5)*SH_ACCY(4) + Kacc*OP(22,6)*SH_ACCY(1) - Kacc*OP(22,16)*SH_ACCY(1) + Kacc*OP(22,1)*SK_ACCY(4) + Kacc*OP(22,2)*SK_ACCY(3) - Kacc*OP(22,4)*SK_ACCY(2) + Kacc*OP(22,3)*SK_ACCY(5) + Kacc*OP(22,7)*SK_ACCY(6));
